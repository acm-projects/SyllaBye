{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.reset = reset;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar ReactDOM = _interopRequireWildcard(require(\"react-dom\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _utils = require(\"@mui/utils\");\nvar _system = require(\"@mui/system\");\nvar _base = require(\"@mui/base\");\nvar _Drawer = _interopRequireWildcard(require(\"../Drawer/Drawer\"));\nvar _useForkRef = _interopRequireDefault(require(\"../utils/useForkRef\"));\nvar _ownerDocument = _interopRequireDefault(require(\"../utils/ownerDocument\"));\nvar _ownerWindow = _interopRequireDefault(require(\"../utils/ownerWindow\"));\nvar _useEventCallback = _interopRequireDefault(require(\"../utils/useEventCallback\"));\nvar _useEnhancedEffect = _interopRequireDefault(require(\"../utils/useEnhancedEffect\"));\nvar _useTheme = _interopRequireDefault(require(\"../styles/useTheme\"));\nvar _utils2 = require(\"../transitions/utils\");\nvar _SwipeArea = _interopRequireDefault(require(\"./SwipeArea\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nconst _excluded = [\"BackdropProps\"],\n  _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"allowSwipeInChildren\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n// This value is closed to what browsers are using internally to\n// trigger a native scroll.\nconst UNCERTAINTY_THRESHOLD = 3; // px\n\n// This is the part of the drawer displayed on touch start.\nconst DRAG_STARTED_SIGNAL = 20; // px\n\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\nlet claimedSwipeInstance = null;\n\n// Exported for test purposes.\nfunction reset() {\n  claimedSwipeInstance = null;\n}\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  const domTreeShapes = [];\n  while (element && element !== rootNode.parentElement) {\n    const style = (0, _ownerWindow.default)(rootNode).getComputedStyle(element);\n    if (\n    // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' ||\n    // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      // noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n    element = element.parentElement;\n  }\n  return domTreeShapes;\n}\n\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\nfunction computeHasNativeHandler(_ref) {\n  let {\n    domTreeShapes,\n    start,\n    current,\n    anchor\n  } = _ref;\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  const axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(shape => {\n    // Determine if we are going backward or forward.\n    let goingForward = current >= start;\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    const areNotAtStart = scrollPosition > 0;\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n    return false;\n  });\n}\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  const props = (0, _system.useThemeProps)({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  const theme = (0, _useTheme.default)();\n  const transitionDurationDefault = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      anchor = 'left',\n      disableBackdropTransition = false,\n      disableDiscovery = false,\n      disableSwipeToOpen = iOS,\n      hideBackdrop,\n      hysteresis = 0.52,\n      allowSwipeInChildren = false,\n      minFlingVelocity = 450,\n      ModalProps: {\n        BackdropProps\n      } = {},\n      onClose,\n      onOpen,\n      open = false,\n      PaperProps = {},\n      SwipeAreaProps,\n      swipeAreaWidth = 20,\n      transitionDuration = transitionDurationDefault,\n      variant = 'temporary'\n    } = props,\n    ModalPropsProp = (0, _objectWithoutPropertiesLoose2.default)(props.ModalProps, _excluded),\n    other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded2);\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\n  const swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  const swipeAreaRef = React.useRef();\n  const backdropRef = React.useRef();\n  const paperRef = React.useRef();\n  const handleRef = (0, _useForkRef.default)(PaperProps.ref, paperRef);\n  const touchDetected = React.useRef(false);\n\n  // Ref for transition duration based on / to match swipe speed\n  const calculatedDurationRef = React.useRef();\n\n  // Use a ref so the open value used is always up to date inside useCallback.\n  (0, _useEnhancedEffect.default)(() => {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  const setPosition = React.useCallback(function (translate) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n    if (mode) {\n      transition = theme.transitions.create('all', (0, _utils2.getTransitionProps)({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode\n      }));\n    }\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n    if (!disableBackdropTransition && !hideBackdrop) {\n      const backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  const handleBodyTouchEnd = (0, _useEventCallback.default)(nativeEvent => {\n    if (!touchDetected.current) {\n      return;\n    }\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    ReactDOM.flushSync(() => {\n      setMaybeSwiping(false);\n    });\n\n    // The swipe wasn't started.\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n    swipeInstance.current.isSwiping = null;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontal = (0, _Drawer.isHorizontal)(anchor);\n    let current;\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    }\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    const translateRatio = currentTranslate / maxTranslate;\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n      return;\n    }\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  const startMaybeSwiping = function () {\n    let force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (!maybeSwiping) {\n      // on Safari Mobile, if you want to be able to have the 'click' event fired on child elements, nothing in the DOM can be changed.\n      // this is because Safari Mobile will not fire any mouse events (still fires touch though) if the DOM changes during mousemove.\n      // so do this change on first touchmove instead of touchstart\n      if (force || !(disableDiscovery && allowSwipeInChildren)) {\n        ReactDOM.flushSync(() => {\n          setMaybeSwiping(true);\n        });\n      }\n      const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n      if (!open && paperRef.current) {\n        // The ref may be null when a parent component updates while swiping.\n        setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n          changeTransition: false\n        });\n      }\n      swipeInstance.current.velocity = 0;\n      swipeInstance.current.lastTime = null;\n      swipeInstance.current.lastTranslate = null;\n      swipeInstance.current.paperHit = false;\n      touchDetected.current = true;\n    }\n  };\n  const handleBodyTouchMove = (0, _useEventCallback.default)(nativeEvent => {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    }\n\n    // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n    startMaybeSwiping(true);\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      const hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor\n      });\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n      claimedSwipeInstance = swipeInstance.current;\n    }\n\n    // We don't know yet.\n    if (swipeInstance.current.isSwiping == null) {\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        }\n\n        // Shift the starting point.\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n\n        // Compensate for the part of the drawer displayed on touch start.\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3;\n\n    // Low Pass filter.\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now();\n\n    // We are swiping, let's prevent the scroll event on iOS.\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n    setPosition(translate);\n  });\n  const handleBodyTouchStart = (0, _useEventCallback.default)(nativeEvent => {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    // We can only have one node at the time claiming ownership for handling the swipe.\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    }\n\n    // At least one element clogs the drawer interaction zone.\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    if (!open) {\n      var _paperRef$current;\n      // logic for if swipe should be ignored:\n      // if disableSwipeToOpen\n      // if target != swipeArea, and target is not a child of paper ref\n      // if is a child of paper ref, and `allowSwipeInChildren` does not allow it\n      if (disableSwipeToOpen || !(nativeEvent.target === swipeAreaRef.current || (_paperRef$current = paperRef.current) != null && _paperRef$current.contains(nativeEvent.target) && (typeof allowSwipeInChildren === 'function' ? allowSwipeInChildren(nativeEvent, swipeAreaRef.current, paperRef.current) : allowSwipeInChildren))) {\n        return;\n      }\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    startMaybeSwiping();\n  });\n  React.useEffect(() => {\n    if (variant === 'temporary') {\n      const doc = (0, _ownerDocument.default)(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return () => {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(() => () => {\n    // We need to release the lock.\n    if (claimedSwipeInstance === swipeInstance.current) {\n      claimedSwipeInstance = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Drawer.default, (0, _extends2.default)({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: (0, _extends2.default)({\n        BackdropProps: (0, _extends2.default)({}, BackdropProps, {\n          ref: backdropRef\n        })\n      }, variant === 'temporary' && {\n        keepMounted: true\n      }, ModalPropsProp),\n      hideBackdrop: hideBackdrop,\n      PaperProps: (0, _extends2.default)({}, PaperProps, {\n        style: (0, _extends2.default)({\n          pointerEvents: variant === 'temporary' && !open && !allowSwipeInChildren ? 'none' : ''\n        }, PaperProps.style),\n        ref: handleRef\n      }),\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/(0, _jsxRuntime.jsx)(_base.NoSsr, {\n      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_SwipeArea.default, (0, _extends2.default)({\n        anchor: anchor,\n        ref: swipeAreaRef,\n        width: swipeAreaWidth\n      }, SwipeAreaProps))\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If set to true, the swipe event will open the drawer even if the user begins the swipe on one of the drawer's children.\n   * This can be useful in scenarios where the drawer is partially visible.\n   * You can customize it further with a callback that determines which children the user can drag over to open the drawer\n   * (for example, to ignore other elements that handle touch move events, like sliders).\n   *\n   * @param {TouchEvent} event The 'touchstart' event\n   * @param {HTMLDivElement} swipeArea The swipe area element\n   * @param {HTMLDivElement} paper The drawer's paper element\n   *\n   * @default false\n   */\n  allowSwipeInChildren: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.func]),\n  /**\n   * @ignore\n   */\n  anchor: _propTypes.default.oneOf(['bottom', 'left', 'right', 'top']),\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: _propTypes.default.bool,\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: _propTypes.default.bool,\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: _propTypes.default.bool,\n  /**\n   * @ignore\n   */\n  hideBackdrop: _propTypes.default.bool,\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: _propTypes.default.number,\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: _propTypes.default.number,\n  /**\n   * @ignore\n   */\n  ModalProps: _propTypes.default /* @typescript-to-proptypes-ignore */.shape({\n    BackdropProps: _propTypes.default.shape({\n      component: _utils.elementTypeAcceptingRef\n    })\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: _propTypes.default.func.isRequired,\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: _propTypes.default.func.isRequired,\n  /**\n   * If `true`, the component is shown.\n   * @default false\n   */\n  open: _propTypes.default.bool.isRequired,\n  /**\n   * @ignore\n   */\n  PaperProps: _propTypes.default /* @typescript-to-proptypes-ignore */.shape({\n    component: _utils.elementTypeAcceptingRef,\n    style: _propTypes.default.object\n  }),\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: _propTypes.default.object,\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: _propTypes.default.number,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    appear: _propTypes.default.number,\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  })]),\n  /**\n   * @ignore\n   */\n  variant: _propTypes.default.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nvar _default = SwipeableDrawer;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","reset","_extends2","_objectWithoutPropertiesLoose2","React","_interopRequireWildcard","ReactDOM","_propTypes","_utils","_system","_base","_Drawer","_useForkRef","_ownerDocument","_ownerWindow","_useEventCallback","_useEnhancedEffect","_useTheme","_utils2","_SwipeArea","_jsxRuntime","_excluded","_excluded2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","UNCERTAINTY_THRESHOLD","DRAG_STARTED_SIGNAL","claimedSwipeInstance","calculateCurrentX","anchor","touches","doc","body","offsetWidth","pageX","calculateCurrentY","containerWindow","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","getDomTreeShapes","element","rootNode","domTreeShapes","parentElement","style","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","computeHasNativeHandler","_ref","start","current","axisProperties","scrollPosition","x","y","scrollLength","clientLength","some","shape","goingForward","axis","round","areNotAtStart","areNotAtEnd","iOS","navigator","test","userAgent","SwipeableDrawer","forwardRef","inProps","ref","props","useThemeProps","name","theme","transitionDurationDefault","enter","transitions","duration","enteringScreen","exit","leavingScreen","disableBackdropTransition","disableDiscovery","disableSwipeToOpen","hideBackdrop","hysteresis","allowSwipeInChildren","minFlingVelocity","ModalProps","BackdropProps","onClose","onOpen","PaperProps","SwipeAreaProps","swipeAreaWidth","transitionDuration","variant","ModalPropsProp","other","maybeSwiping","setMaybeSwiping","useState","swipeInstance","useRef","isSwiping","swipeAreaRef","backdropRef","paperRef","handleRef","touchDetected","calculatedDurationRef","setPosition","useCallback","translate","options","arguments","length","undefined","mode","changeTransition","anchorRtl","getAnchor","rtlTranslateMultiplier","indexOf","isHorizontal","transform","drawerStyle","webkitTransform","transition","create","getTransitionProps","easing","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","nativeEvent","flushSync","horizontal","changedTouches","currentTarget","startX","startY","translateRatio","abs","velocity","startMaybeSwiping","force","lastTime","lastTranslate","paperHit","handleBodyTouchMove","currentX","currentY","contains","target","hasNativeHandler","dx","dy","definitelySwiping","cancelable","preventDefault","performance","now","handleBodyTouchStart","defaultPrevented","defaultMuiPrevented","_paperRef$current","useEffect","addEventListener","passive","removeEventListener","jsxs","Fragment","children","jsx","keepMounted","pointerEvents","NoSsr","width","process","env","NODE_ENV","propTypes","oneOfType","bool","func","oneOf","node","number","component","elementTypeAcceptingRef","isRequired","object","appear","_default"],"sources":["/Users/k.rahul287/node_modules/@mui/material/node/SwipeableDrawer/SwipeableDrawer.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.reset = reset;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar ReactDOM = _interopRequireWildcard(require(\"react-dom\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _utils = require(\"@mui/utils\");\nvar _system = require(\"@mui/system\");\nvar _base = require(\"@mui/base\");\nvar _Drawer = _interopRequireWildcard(require(\"../Drawer/Drawer\"));\nvar _useForkRef = _interopRequireDefault(require(\"../utils/useForkRef\"));\nvar _ownerDocument = _interopRequireDefault(require(\"../utils/ownerDocument\"));\nvar _ownerWindow = _interopRequireDefault(require(\"../utils/ownerWindow\"));\nvar _useEventCallback = _interopRequireDefault(require(\"../utils/useEventCallback\"));\nvar _useEnhancedEffect = _interopRequireDefault(require(\"../utils/useEnhancedEffect\"));\nvar _useTheme = _interopRequireDefault(require(\"../styles/useTheme\"));\nvar _utils2 = require(\"../transitions/utils\");\nvar _SwipeArea = _interopRequireDefault(require(\"./SwipeArea\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nconst _excluded = [\"BackdropProps\"],\n  _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"allowSwipeInChildren\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n// This value is closed to what browsers are using internally to\n// trigger a native scroll.\nconst UNCERTAINTY_THRESHOLD = 3; // px\n\n// This is the part of the drawer displayed on touch start.\nconst DRAG_STARTED_SIGNAL = 20; // px\n\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\nlet claimedSwipeInstance = null;\n\n// Exported for test purposes.\nfunction reset() {\n  claimedSwipeInstance = null;\n}\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  const domTreeShapes = [];\n  while (element && element !== rootNode.parentElement) {\n    const style = (0, _ownerWindow.default)(rootNode).getComputedStyle(element);\n    if (\n    // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' ||\n    // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      // noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n    element = element.parentElement;\n  }\n  return domTreeShapes;\n}\n\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\nfunction computeHasNativeHandler({\n  domTreeShapes,\n  start,\n  current,\n  anchor\n}) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  const axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(shape => {\n    // Determine if we are going backward or forward.\n    let goingForward = current >= start;\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    const areNotAtStart = scrollPosition > 0;\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n    return false;\n  });\n}\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  const props = (0, _system.useThemeProps)({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  const theme = (0, _useTheme.default)();\n  const transitionDurationDefault = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      anchor = 'left',\n      disableBackdropTransition = false,\n      disableDiscovery = false,\n      disableSwipeToOpen = iOS,\n      hideBackdrop,\n      hysteresis = 0.52,\n      allowSwipeInChildren = false,\n      minFlingVelocity = 450,\n      ModalProps: {\n        BackdropProps\n      } = {},\n      onClose,\n      onOpen,\n      open = false,\n      PaperProps = {},\n      SwipeAreaProps,\n      swipeAreaWidth = 20,\n      transitionDuration = transitionDurationDefault,\n      variant = 'temporary'\n    } = props,\n    ModalPropsProp = (0, _objectWithoutPropertiesLoose2.default)(props.ModalProps, _excluded),\n    other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded2);\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\n  const swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  const swipeAreaRef = React.useRef();\n  const backdropRef = React.useRef();\n  const paperRef = React.useRef();\n  const handleRef = (0, _useForkRef.default)(PaperProps.ref, paperRef);\n  const touchDetected = React.useRef(false);\n\n  // Ref for transition duration based on / to match swipe speed\n  const calculatedDurationRef = React.useRef();\n\n  // Use a ref so the open value used is always up to date inside useCallback.\n  (0, _useEnhancedEffect.default)(() => {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  const setPosition = React.useCallback((translate, options = {}) => {\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n    if (mode) {\n      transition = theme.transitions.create('all', (0, _utils2.getTransitionProps)({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode\n      }));\n    }\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n    if (!disableBackdropTransition && !hideBackdrop) {\n      const backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  const handleBodyTouchEnd = (0, _useEventCallback.default)(nativeEvent => {\n    if (!touchDetected.current) {\n      return;\n    }\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    ReactDOM.flushSync(() => {\n      setMaybeSwiping(false);\n    });\n\n    // The swipe wasn't started.\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n    swipeInstance.current.isSwiping = null;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontal = (0, _Drawer.isHorizontal)(anchor);\n    let current;\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    }\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    const translateRatio = currentTranslate / maxTranslate;\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n      return;\n    }\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  const startMaybeSwiping = (force = false) => {\n    if (!maybeSwiping) {\n      // on Safari Mobile, if you want to be able to have the 'click' event fired on child elements, nothing in the DOM can be changed.\n      // this is because Safari Mobile will not fire any mouse events (still fires touch though) if the DOM changes during mousemove.\n      // so do this change on first touchmove instead of touchstart\n      if (force || !(disableDiscovery && allowSwipeInChildren)) {\n        ReactDOM.flushSync(() => {\n          setMaybeSwiping(true);\n        });\n      }\n      const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n      if (!open && paperRef.current) {\n        // The ref may be null when a parent component updates while swiping.\n        setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n          changeTransition: false\n        });\n      }\n      swipeInstance.current.velocity = 0;\n      swipeInstance.current.lastTime = null;\n      swipeInstance.current.lastTranslate = null;\n      swipeInstance.current.paperHit = false;\n      touchDetected.current = true;\n    }\n  };\n  const handleBodyTouchMove = (0, _useEventCallback.default)(nativeEvent => {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    }\n\n    // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n    startMaybeSwiping(true);\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      const hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor\n      });\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n      claimedSwipeInstance = swipeInstance.current;\n    }\n\n    // We don't know yet.\n    if (swipeInstance.current.isSwiping == null) {\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        }\n\n        // Shift the starting point.\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n\n        // Compensate for the part of the drawer displayed on touch start.\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3;\n\n    // Low Pass filter.\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now();\n\n    // We are swiping, let's prevent the scroll event on iOS.\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n    setPosition(translate);\n  });\n  const handleBodyTouchStart = (0, _useEventCallback.default)(nativeEvent => {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    // We can only have one node at the time claiming ownership for handling the swipe.\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    }\n\n    // At least one element clogs the drawer interaction zone.\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    if (!open) {\n      var _paperRef$current;\n      // logic for if swipe should be ignored:\n      // if disableSwipeToOpen\n      // if target != swipeArea, and target is not a child of paper ref\n      // if is a child of paper ref, and `allowSwipeInChildren` does not allow it\n      if (disableSwipeToOpen || !(nativeEvent.target === swipeAreaRef.current || (_paperRef$current = paperRef.current) != null && _paperRef$current.contains(nativeEvent.target) && (typeof allowSwipeInChildren === 'function' ? allowSwipeInChildren(nativeEvent, swipeAreaRef.current, paperRef.current) : allowSwipeInChildren))) {\n        return;\n      }\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    startMaybeSwiping();\n  });\n  React.useEffect(() => {\n    if (variant === 'temporary') {\n      const doc = (0, _ownerDocument.default)(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return () => {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(() => () => {\n    // We need to release the lock.\n    if (claimedSwipeInstance === swipeInstance.current) {\n      claimedSwipeInstance = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Drawer.default, (0, _extends2.default)({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: (0, _extends2.default)({\n        BackdropProps: (0, _extends2.default)({}, BackdropProps, {\n          ref: backdropRef\n        })\n      }, variant === 'temporary' && {\n        keepMounted: true\n      }, ModalPropsProp),\n      hideBackdrop: hideBackdrop,\n      PaperProps: (0, _extends2.default)({}, PaperProps, {\n        style: (0, _extends2.default)({\n          pointerEvents: variant === 'temporary' && !open && !allowSwipeInChildren ? 'none' : ''\n        }, PaperProps.style),\n        ref: handleRef\n      }),\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/(0, _jsxRuntime.jsx)(_base.NoSsr, {\n      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_SwipeArea.default, (0, _extends2.default)({\n        anchor: anchor,\n        ref: swipeAreaRef,\n        width: swipeAreaWidth\n      }, SwipeAreaProps))\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If set to true, the swipe event will open the drawer even if the user begins the swipe on one of the drawer's children.\n   * This can be useful in scenarios where the drawer is partially visible.\n   * You can customize it further with a callback that determines which children the user can drag over to open the drawer\n   * (for example, to ignore other elements that handle touch move events, like sliders).\n   *\n   * @param {TouchEvent} event The 'touchstart' event\n   * @param {HTMLDivElement} swipeArea The swipe area element\n   * @param {HTMLDivElement} paper The drawer's paper element\n   *\n   * @default false\n   */\n  allowSwipeInChildren: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.func]),\n  /**\n   * @ignore\n   */\n  anchor: _propTypes.default.oneOf(['bottom', 'left', 'right', 'top']),\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: _propTypes.default.bool,\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: _propTypes.default.bool,\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: _propTypes.default.bool,\n  /**\n   * @ignore\n   */\n  hideBackdrop: _propTypes.default.bool,\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: _propTypes.default.number,\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: _propTypes.default.number,\n  /**\n   * @ignore\n   */\n  ModalProps: _propTypes.default /* @typescript-to-proptypes-ignore */.shape({\n    BackdropProps: _propTypes.default.shape({\n      component: _utils.elementTypeAcceptingRef\n    })\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: _propTypes.default.func.isRequired,\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: _propTypes.default.func.isRequired,\n  /**\n   * If `true`, the component is shown.\n   * @default false\n   */\n  open: _propTypes.default.bool.isRequired,\n  /**\n   * @ignore\n   */\n  PaperProps: _propTypes.default /* @typescript-to-proptypes-ignore */.shape({\n    component: _utils.elementTypeAcceptingRef,\n    style: _propTypes.default.object\n  }),\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: _propTypes.default.object,\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: _propTypes.default.number,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    appear: _propTypes.default.number,\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  })]),\n  /**\n   * @ignore\n   */\n  variant: _propTypes.default.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nvar _default = SwipeableDrawer;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}