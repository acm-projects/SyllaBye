[{"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\Register.js":"1","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\Login.js":"2","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\ImageGrid.js":"3","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\Dropzone.js":"4","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\Home.js":"5","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\index.js":"6","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\App.js":"7","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\Welcome.js":"8","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\CalendarPg.js":"9","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\FileDetails.js":"10","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\GradeDistribution.js":"11","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\Header.js":"12","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\TeacherInfo.js":"13","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\Grades.js":"14","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\Dates.js":"15"},{"size":10090,"mtime":1681698752775,"results":"16","hashOfConfig":"17"},{"size":5994,"mtime":1681698752771,"results":"18","hashOfConfig":"17"},{"size":1265,"mtime":1681714026780,"results":"19","hashOfConfig":"17"},{"size":3288,"mtime":1681698752783,"results":"20","hashOfConfig":"17"},{"size":5991,"mtime":1681713995463,"results":"21","hashOfConfig":"17"},{"size":210,"mtime":1681367093044,"results":"22","hashOfConfig":"17"},{"size":949,"mtime":1681178005572,"results":"23","hashOfConfig":"17"},{"size":1330,"mtime":1681171799563,"results":"24","hashOfConfig":"17"},{"size":17650,"mtime":1681690919559,"results":"25","hashOfConfig":"17"},{"size":7108,"mtime":1680039256668,"results":"26","hashOfConfig":"17"},{"size":475,"mtime":1680039256689,"results":"27","hashOfConfig":"17"},{"size":932,"mtime":1681623525425,"results":"28","hashOfConfig":"17"},{"size":1384,"mtime":1680039256697,"results":"29","hashOfConfig":"17"},{"size":568,"mtime":1680039256692,"results":"30","hashOfConfig":"17"},{"size":692,"mtime":1680039256687,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},"ood8i6",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\Register.js",["81","82"],[],"import './Register.css'\r\nimport {useState} from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport logo from './../syllabyelogo.png';\r\nimport { gapi } from 'gapi-script';\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\n\r\n\r\nfunction Register() {\r\n    var CLIENT_ID\r\n    var API_KEY\r\n    var DISCOVERY_DOCS\r\n    var SCOPES\r\n\r\n    const res = fetch(\"http://localhost:1337/api/google-auth-keys\", {\r\n        method: \"GET\",\r\n    }).then((res) => res.json()\r\n    ).then((res) => {\r\n        CLIENT_ID = res.CLIENT_ID\r\n        API_KEY = res.API_KEY\r\n        DISCOVERY_DOCS = res.DISCOVERY_DOCS\r\n        SCOPES = res.SCOPES\r\n    });\r\n    \r\n    const navigate = useNavigate()\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [vPassword, setVPassword] = useState('');\r\n\r\n    function handleLoginAsk(e){\r\n        e.preventDefault();\r\n        navigate('/login');\r\n    }\r\n\r\n    async function registeredUser(event) {\r\n        event.preventDefault()\r\n\r\n        const response = await fetch('http://localhost:1337/api/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                password\r\n            }),\r\n        })\r\n\r\n        const data = await response.json();\r\n\r\n        if(data.status === 'ok'){\r\n            navigate('/login')\r\n        }\r\n    }\r\n\r\n    async function googleAuth() {\r\n        gapi.load('client:auth2', () => {\r\n            gapi.client.init({\r\n                apiKey: API_KEY,\r\n                clientId: CLIENT_ID,\r\n                discoveryDocs: [DISCOVERY_DOCS],\r\n                scope: SCOPES,\r\n            }).then(() => {\r\n                gapi.auth2.getAuthInstance().signIn().then(async () => {\r\n                    const google = await gapi.auth2.getAuthInstance().currentUser\r\n                    const googleToken = await google.get().getAuthResponse().id_token;\r\n                    const googleUser = await google.get().getBasicProfile();\r\n                    const userName = googleUser.getName();\r\n                    const userEmail = googleUser.getEmail();\r\n\r\n                    console.log(googleToken);\r\n                    console.log(userName);\r\n                    console.log(userEmail);\r\n\r\n                    const response = await fetch('http://localhost:1337/api/google-auth-register', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify({\r\n                            name: userName,\r\n                            email: userEmail,\r\n                            password: googleToken,\r\n                        }),\r\n                    })\r\n\r\n                    const data = await response.json();\r\n                    console.log(data);\r\n\r\n                    for (let i = 0; i < localStorage.length; i++) {\r\n                        const key = localStorage.key(i);\r\n                        if (key.startsWith('token')) {\r\n                          console.log(localStorage.getItem(key));\r\n                        }\r\n                    }\r\n\r\n                    if(data.status === 'ok'){\r\n                        console.log(\"Works\")\r\n                        localStorage.setItem('token', data.user)\r\n                        navigate('/home')\r\n                    }\r\n                    else if(data.status === 'error'){\r\n                        alert(\"You already have an account with this email. Please login instead.\")\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n            // const google = await gapi.auth2.getAuthInstance().currentUser\r\n            // const googleToken = await google.get().getAuthResponse().id_token;\r\n            // const googleUser = await google.get().getBasicProfile();\r\n            // const userName = googleUser.getName();\r\n            // const userEmail = googleUser.getEmail();\r\n\r\n\r\n\r\n\r\n\r\n            // console.log(await gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile());\r\n            // const googleUser = await gapi.auth2.getAuthInstance().currentUser.get();\r\n            // // console.log(googleUser);\r\n\r\n            \r\n            // // console.log(googleToken);\r\n            // const userName = await googleUser.getBasicProfile().getName();\r\n            // console.log(userName);\r\n            // const googleToken = googleUser.getAuthResponse().id_token;\r\n            // const userEmail = googleUser.getBasicProfile().getEmail();\r\n            // console.log(googleUser);\r\n            // console.log(googleToken);\r\n            // console.log(userName);\r\n            // console.log(userEmail);\r\n\r\n\r\n            // const googleToken = await gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().id_token;\r\n            // const googleUser = await gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();\r\n            // const userName = await gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getName();\r\n            // const userEmail = await gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getEmail();\r\n\r\n            // const response = await fetch('http://localhost:1337/api/google-auth-register', {\r\n            //     method: 'POST',\r\n            //     headers: {\r\n            //         'Content-Type': 'application/json'\r\n            //     },\r\n            //     body: JSON.stringify({\r\n            //         token: googleToken,\r\n            //         name: userName,\r\n            //         email: userEmail,\r\n            //     })\r\n            // })\r\n            \r\n    //         const response = await fetch('http://localhost:1337/api/google-auth-register', {\r\n    //             method: 'POST',\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json'\r\n    //             },\r\n    //             body: JSON.stringify({\r\n    //                 token: gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().id_token,\r\n    //                 name: gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getName(),\r\n    //                 email: gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getEmail(),\r\n    //             })\r\n    //         })\r\n\r\n    //         const data = await response.json()\r\n\r\n    //         if(data.status === 'ok'){\r\n    //             console.log(\"Works\")\r\n    //             localStorage.setItem('token', data.user)\r\n    //             navigate('/home')\r\n    //         }\r\n    //         else if(data.status === 'error'){\r\n    //             alert(\"You already have an account with this email. Please login instead.\")\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <div className = \"nameEnc\">\r\n                    <label for=\"nameField\" id=\"name\"><img src={logo}/></label>\r\n                </div>\r\n            </header>\r\n            <div className = \"Form\">\r\n                <div className = \"RealForm\">\r\n                    <label for=\"signupField\" id=\"signup\">Sign Up</label>\r\n                    <label for=\"personNameField\" class = \"labels\" id = \"personName\">Name</label>\r\n                    <form onSubmit = {registeredUser}>\r\n                        <input\r\n                            class = \"inputs\"\r\n                            value = {name}\r\n                            onChange = {(e) => setName(e.target.value)}\r\n                            type=\"text\"  \r\n                        />\r\n                        <br />\r\n                        <label for=\"emailField\" class = \"labels\" id = \"email\">Email</label>\r\n                        <input \r\n                            class = \"inputs\"\r\n                            value = {email}\r\n                            onChange = {(e) => setEmail(e.target.value)}\r\n                            type=\"text\"  \r\n                        />\r\n                        <br />\r\n                        <label for=\"passwordField\" class = \"labels\" id = \"password\">Password</label>\r\n                        {/* <br /> */}\r\n                        <input \r\n                            class = \"inputs\"\r\n                            value = {password}\r\n                            onChange = {(e) => setPassword(e.target.value)}\r\n                            type=\"password\"  \r\n                        />\r\n                        <br />\r\n                        <label for=\"verifypwField\" class = \"labels\" id = \"verifypw\">Verify password</label>\r\n                        {/* <br /> */}\r\n                        \r\n                        <input \r\n                            class = \"inputs\"\r\n                            value = {vPassword}\r\n                            onChange = {(e) => setVPassword(e.target.value)}\r\n                            type=\"password\"  \r\n                        />\r\n                        <br />\r\n                        <input id=\"signupButton\" className=\"Buttons\" type=\"submit\" value=\"Sign Up\"/>\r\n                        \r\n                    </form>\r\n                    <GoogleOAuthProvider clientId=\"436198478288-efo40fbhrj324kk9uktqfr20tthrt5dk.apps.googleusercontent.com\">\r\n                        <GoogleLogin\r\n                            onSuccess={googleAuth}\r\n                            onError={() => {\r\n                                console.log('Login Failed');\r\n                            }}\r\n                        />\r\n                    </GoogleOAuthProvider>\r\n                    <p id = \"yesAccount\">Already have an account?</p>\r\n                    <input className='Buttons' id=\"signinButton3\" type=\"submit\" value=\"Click here to sign in.\" onClick={handleLoginAsk}/>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n",[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\Login.js",["83","84"],[],"import './Login.css';\r\nimport {useState} from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport logo from './../syllabyelogo.png';\r\nimport { gapi } from 'gapi-script';\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\n\r\nfunction Login() {\r\n    var CLIENT_ID\r\n    var API_KEY\r\n    var DISCOVERY_DOCS\r\n    var SCOPES\r\n\r\n    const res = fetch(\"http://localhost:1337/api/google-auth-keys\", {\r\n        method: \"GET\",\r\n    }).then((res) => res.json()\r\n    ).then((res) => {\r\n        CLIENT_ID = res.CLIENT_ID\r\n        API_KEY = res.API_KEY\r\n        DISCOVERY_DOCS = res.DISCOVERY_DOCS\r\n        SCOPES = res.SCOPES\r\n    });\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    function handleRegisterAsk(e){\r\n        e.preventDefault();\r\n        navigate('/register');\r\n    }\r\n\r\n    async function loginUser(event) {\r\n        event.preventDefault()\r\n\r\n        const response = await fetch('http://localhost:1337/api/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            }),\r\n        })\r\n        \r\n        const data = await response.json();\r\n        \r\n        if(data.user){\r\n            localStorage.setItem('token', data.user)\r\n            navigate('/home')\r\n        }\r\n        else{\r\n            //add error message\r\n        }\r\n    }\r\n\r\n    async function googleAuth() {\r\n        gapi.load('client:auth2', () => {\r\n            gapi.client.init({\r\n                apiKey: API_KEY,\r\n                clientId: CLIENT_ID,\r\n                discoveryDocs: [DISCOVERY_DOCS],\r\n                scope: SCOPES,\r\n            }).then(() => {\r\n                gapi.auth2.getAuthInstance().signIn().then(async () => {\r\n                    const google = await gapi.auth2.getAuthInstance().currentUser\r\n                    const googleUser = await google.get().getBasicProfile();\r\n                    const userName = googleUser.getName();\r\n                    const userEmail = googleUser.getEmail();\r\n\r\n                    console.log(userName);\r\n                    console.log(userEmail);\r\n\r\n                    const response = await fetch('http://localhost:1337/api/google-auth-login', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify({\r\n                            name: userName,\r\n                            email: userEmail,\r\n                        }),\r\n                    })\r\n\r\n                    const data = await response.json();\r\n                    console.log(data);\r\n\r\n                    for (let i = 0; i < localStorage.length; i++) {\r\n                        const key = localStorage.key(i);\r\n                        if (key.startsWith('token')) {\r\n                          console.log(localStorage.getItem(key));\r\n                        }\r\n                    }\r\n\r\n                    if(data.status === 'ok'){\r\n                        console.log(\"Works\")\r\n                        localStorage.setItem('token', data.user)\r\n                        navigate('/home')\r\n                    }\r\n                    else if(data.status === 'error'){\r\n                        alert(\"You already have an account with this email. Please login instead.\")\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"App2\">\r\n            <header className=\"App-header2\">\r\n                <div className = \"nameEnc2\">\r\n                    <label for=\"nameField2\" id=\"name2\"><img src={logo}/></label>\r\n                </div>\r\n            </header>\r\n            <div className = \"Form2\">\r\n                <div className = \"RealForm2\">\r\n                    <form onSubmit = {loginUser}>\r\n                        <label for=\"signinField\" id=\"signin\">Sign In</label>\r\n                        <label for=\"personNameField\" class = \"labels2\" id = \"personName\">Username</label>\r\n                        <input \r\n                            class=\"inputs2\"\r\n                            value = {email}\r\n                            onChange = {(e) => setEmail(e.target.value)}\r\n                            type=\"text\"  \r\n                        />\r\n                        <br />\r\n                        <label for=\"passwordField\" class = \"labels2\" id = \"password\">Password </label>\r\n                        {/* <br /> */}\r\n                        <input \r\n                            class=\"inputs2\"\r\n                            value = {password}\r\n                            onChange = {(e) => setPassword(e.target.value)}\r\n                            type=\"password\"  \r\n                        />\r\n                        <br />\r\n                        <input className='Buttons' id=\"signinButton\" type=\"submit\" value=\"Sign In\"/>\r\n                        <br />\r\n                        <p id = \"noAccount\">Don't have an account?</p>\r\n                        <input className='Buttons' id=\"signupButton2\" type=\"submit\" value=\"Click here to sign up.\" onClick={handleRegisterAsk}/>\r\n                        <br />\r\n                        \r\n                    </form>\r\n                    <GoogleOAuthProvider clientId=\"436198478288-efo40fbhrj324kk9uktqfr20tthrt5dk.apps.googleusercontent.com\">\r\n                        <GoogleLogin\r\n                            id = \"googleButton\"\r\n                            onSuccess={googleAuth}\r\n                            onError={() => {\r\n                                console.log('Login Failed');\r\n                            }}\r\n                        />\r\n                    </GoogleOAuthProvider>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\ImageGrid.js",["85"],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\Dropzone.js",["86","87","88","89","90"],[],"import React from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"./Dropzone.css\";\r\nimport { Document, Page } from 'react-pdf';\r\n\r\nfunction Dropzone({ onDrop, accept, open }) {\r\n\r\n  const { getRootProps, getInputProps, isDragActive, acceptedFiles, fileRejections } =\r\n    useDropzone({\r\n      accept: \"./pdf\", onDrop,\r\n    });\r\n\r\n  const files = acceptedFiles.map((file) => (\r\n     <li key={file.path}>\r\n       {file.path} - {file.size} bytes\r\n     </li>\r\n   ));\r\n\r\n  acceptedFiles.forEach((file) => {\r\n    \r\n  });\r\n\r\n  // const inpFile = document.getElementById('inpFile');\r\n  // // const btnUpload = document.getElementById('btnUpload');\r\n\r\n  // async function clickUpload() {\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"pdfFile\", inpFile.files[0]);\r\n  //   // console.log(\"test\");\r\n  //   const res = await fetch(\"http://localhost:1337/extract-text\", {\r\n  //       method: \"post\",\r\n  //       body: formData\r\n  //   });\r\n\r\n  //   const extractedText = await res.json();\r\n  //   if (extractedText) {\r\n  //      console.log(extractedText);\r\n  //      return extractedText;\r\n  //   }\r\n  //   else{\r\n  //     return \"Error\";\r\n  //   }\r\n  // }\r\n\r\n  // btnUpload.addEventListener(\"click\", () => {\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"pdfFile\", inpFile.files[0]);\r\n  //   fetch(\"/extract-text\", {\r\n  //       method: \"post\",\r\n  //       body: formData\r\n  //   }).then(response => {\r\n  //       return response.text();\r\n  //   }).then(extractedText => {\r\n  //       resultText.value = extractedText;\r\n  //   })\r\n  // });\r\n\r\n  const acceptedFileItems = acceptedFiles.map(file => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  const fileRejectionItems = fileRejections.map(({ file, errors }) => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n      <ul>\r\n        {errors.map(e => (\r\n          <li key={e.code}>{e.message}</li>\r\n        ))}\r\n      </ul>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input className=\"input-zone\" {...getInputProps()} />\r\n        <div className=\"text-center\">\r\n          {isDragActive ? (\r\n            <p className=\"dropzone-content\">\r\n              Release to drop the files here\r\n            </p>\r\n          ) : (\r\n            <p className=\"dropzone-content\">\r\n              Drag’ n’ drop some files here, or click to select files.\r\n              <br></br>\r\n              Only accepts PDF files. \r\n            </p>\r\n            )}\r\n          \r\n          { <div id=\"smolBtn\" onClick={open}>\r\n            \r\n          </div> }\r\n          {/* <input type=\"file\" id=\"inpFile\"/>\r\n          <button type=\"button\" id=\"btnUpload\">Upload</button> */}\r\n        </div>\r\n        {/* { <aside>\r\n        <h4>Accepted files</h4>\r\n        <ul>{acceptedFileItems}</ul>\r\n        <h4>Rejected files</h4>\r\n        <ul>{fileRejectionItems}</ul>\r\n      </aside> } */}\r\n      </div>\r\n    </div>\r\n  );\r\n  // return (\r\n  //   <div>\r\n  //     <input type=\"file\" id=\"inpFile\"/>\r\n  //     <input\r\n  //       type=\"button\"\r\n  //       id=\"btnUpload\"\r\n  //       value=\"Upload\"\r\n  //       onClick={() => { clickUpload() }}\r\n  //     />\r\n  //   </div>\r\n  // );\r\n\r\n}\r\n\r\nexport default Dropzone;","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\Home.js",["91","92","93","94","95"],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\index.js",[],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\App.js",[],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\Welcome.js",["96"],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\CalendarPg.js",["97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\FileDetails.js",[],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\GradeDistribution.js",[],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\Header.js",["123","124"],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\TeacherInfo.js",[],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\Grades.js",[],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\Dates.js",[],[],{"ruleId":"125","severity":1,"message":"126","line":16,"column":11,"nodeType":"127","messageId":"128","endLine":16,"endColumn":14},{"ruleId":"129","severity":1,"message":"130","line":187,"column":54,"nodeType":"131","endLine":187,"endColumn":71},{"ruleId":"125","severity":1,"message":"126","line":15,"column":11,"nodeType":"127","messageId":"128","endLine":15,"endColumn":14},{"ruleId":"129","severity":1,"message":"130","line":115,"column":56,"nodeType":"131","endLine":115,"endColumn":73},{"ruleId":"125","severity":1,"message":"132","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":13},{"ruleId":"125","severity":1,"message":"133","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":18},{"ruleId":"125","severity":1,"message":"134","line":4,"column":20,"nodeType":"127","messageId":"128","endLine":4,"endColumn":24},{"ruleId":"125","severity":1,"message":"135","line":13,"column":9,"nodeType":"127","messageId":"128","endLine":13,"endColumn":14},{"ruleId":"125","severity":1,"message":"136","line":58,"column":9,"nodeType":"127","messageId":"128","endLine":58,"endColumn":26},{"ruleId":"125","severity":1,"message":"137","line":64,"column":9,"nodeType":"127","messageId":"128","endLine":64,"endColumn":27},{"ruleId":"125","severity":1,"message":"133","line":7,"column":17,"nodeType":"127","messageId":"128","endLine":7,"endColumn":25},{"ruleId":"125","severity":1,"message":"134","line":7,"column":27,"nodeType":"127","messageId":"128","endLine":7,"endColumn":31},{"ruleId":"125","severity":1,"message":"135","line":58,"column":23,"nodeType":"127","messageId":"128","endLine":58,"endColumn":28},{"ruleId":"138","severity":1,"message":"139","line":76,"column":8,"nodeType":"140","endLine":76,"endColumn":10,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":79,"column":34,"nodeType":"144","messageId":"145","endLine":79,"endColumn":36},{"ruleId":"129","severity":1,"message":"130","line":22,"column":52,"nodeType":"131","endLine":22,"endColumn":69},{"ruleId":"125","severity":1,"message":"146","line":1,"column":28,"nodeType":"127","messageId":"128","endLine":1,"endColumn":36},{"ruleId":"125","severity":1,"message":"126","line":13,"column":11,"nodeType":"127","messageId":"128","endLine":13,"endColumn":14},{"ruleId":"138","severity":1,"message":"147","line":49,"column":26,"nodeType":"148","endLine":49,"endColumn":42},{"ruleId":"149","severity":1,"message":"150","line":112,"column":51,"nodeType":"151","messageId":"152","endLine":112,"endColumn":53},{"ruleId":"149","severity":1,"message":"150","line":117,"column":32,"nodeType":"151","messageId":"152","endLine":117,"endColumn":34},{"ruleId":"149","severity":1,"message":"153","line":163,"column":51,"nodeType":"151","messageId":"152","endLine":163,"endColumn":53},{"ruleId":"149","severity":1,"message":"153","line":163,"column":88,"nodeType":"151","messageId":"152","endLine":163,"endColumn":90},{"ruleId":"149","severity":1,"message":"153","line":163,"column":121,"nodeType":"151","messageId":"152","endLine":163,"endColumn":123},{"ruleId":"149","severity":1,"message":"153","line":164,"column":52,"nodeType":"151","messageId":"152","endLine":164,"endColumn":54},{"ruleId":"149","severity":1,"message":"150","line":172,"column":54,"nodeType":"151","messageId":"152","endLine":172,"endColumn":56},{"ruleId":"149","severity":1,"message":"150","line":175,"column":52,"nodeType":"151","messageId":"152","endLine":175,"endColumn":54},{"ruleId":"149","severity":1,"message":"150","line":184,"column":62,"nodeType":"151","messageId":"152","endLine":184,"endColumn":64},{"ruleId":"149","severity":1,"message":"150","line":187,"column":60,"nodeType":"151","messageId":"152","endLine":187,"endColumn":62},{"ruleId":"149","severity":1,"message":"150","line":217,"column":54,"nodeType":"151","messageId":"152","endLine":217,"endColumn":56},{"ruleId":"149","severity":1,"message":"150","line":220,"column":52,"nodeType":"151","messageId":"152","endLine":220,"endColumn":54},{"ruleId":"149","severity":1,"message":"150","line":229,"column":62,"nodeType":"151","messageId":"152","endLine":229,"endColumn":64},{"ruleId":"149","severity":1,"message":"150","line":232,"column":60,"nodeType":"151","messageId":"152","endLine":232,"endColumn":62},{"ruleId":"149","severity":1,"message":"153","line":258,"column":53,"nodeType":"151","messageId":"152","endLine":258,"endColumn":55},{"ruleId":"149","severity":1,"message":"150","line":265,"column":50,"nodeType":"151","messageId":"152","endLine":265,"endColumn":52},{"ruleId":"149","severity":1,"message":"150","line":268,"column":48,"nodeType":"151","messageId":"152","endLine":268,"endColumn":50},{"ruleId":"149","severity":1,"message":"150","line":277,"column":58,"nodeType":"151","messageId":"152","endLine":277,"endColumn":60},{"ruleId":"149","severity":1,"message":"150","line":280,"column":56,"nodeType":"151","messageId":"152","endLine":280,"endColumn":58},{"ruleId":"154","severity":1,"message":"155","line":314,"column":17,"nodeType":"127","messageId":"156","endLine":314,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":333,"column":47,"nodeType":"151","messageId":"152","endLine":333,"endColumn":49},{"ruleId":"149","severity":1,"message":"150","line":333,"column":86,"nodeType":"151","messageId":"152","endLine":333,"endColumn":88},{"ruleId":"154","severity":1,"message":"157","line":341,"column":26,"nodeType":"127","messageId":"156","endLine":341,"endColumn":27},{"ruleId":"125","severity":1,"message":"158","line":2,"column":16,"nodeType":"127","messageId":"128","endLine":2,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":27,"column":51,"nodeType":"131","endLine":27,"endColumn":68},"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'trash' is defined but never used.","'Document' is defined but never used.","'Page' is defined but never used.","'files' is assigned a value but never used.","'acceptedFileItems' is assigned a value but never used.","'fileRejectionItems' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["159"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","Assignments to the 'calendarID' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-redeclare","'request' is already defined.","redeclared","'i' is already defined.","'useEffect' is defined but never used.",{"desc":"160","fix":"161"},"Update the dependencies array to be: [navigate]",{"range":"162","text":"163"},[2533,2535],"[navigate]"]