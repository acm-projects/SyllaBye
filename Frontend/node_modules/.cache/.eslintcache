[{"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\Register.js":"1","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\Login.js":"2","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\ImageGrid.js":"3","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\Dropzone.js":"4","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\Home.js":"5","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\index.js":"6","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\App.js":"7","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\Welcome.js":"8","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\CalendarPg.js":"9","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\FileDetails.js":"10","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\GradeDistribution.js":"11","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\Header.js":"12","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\TeacherInfo.js":"13","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\Dates.js":"14","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\NavBar.js":"15","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\PopupField.js":"16","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\Description.js":"17"},{"size":10090,"mtime":1681698752775,"results":"18","hashOfConfig":"19"},{"size":5994,"mtime":1681698752771,"results":"20","hashOfConfig":"19"},{"size":1242,"mtime":1681714545388,"results":"21","hashOfConfig":"19"},{"size":3288,"mtime":1681698752783,"results":"22","hashOfConfig":"19"},{"size":9203,"mtime":1681890435126,"results":"23","hashOfConfig":"19"},{"size":210,"mtime":1681367093044,"results":"24","hashOfConfig":"19"},{"size":949,"mtime":1681178005572,"results":"25","hashOfConfig":"19"},{"size":1330,"mtime":1681171799563,"results":"26","hashOfConfig":"19"},{"size":17390,"mtime":1681755244258,"results":"27","hashOfConfig":"19"},{"size":14033,"mtime":1681889983220,"results":"28","hashOfConfig":"19"},{"size":1020,"mtime":1681883210151,"results":"29","hashOfConfig":"19"},{"size":932,"mtime":1681623525425,"results":"30","hashOfConfig":"19"},{"size":2285,"mtime":1681883216247,"results":"31","hashOfConfig":"19"},{"size":1664,"mtime":1681883205898,"results":"32","hashOfConfig":"19"},{"size":603,"mtime":1681889383765,"results":"33","hashOfConfig":"19"},{"size":194,"mtime":1681883217554,"results":"34","hashOfConfig":"19"},{"size":692,"mtime":1681889298966,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},"ood8i6",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"40"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\Register.js",["97","98"],[],"import './Register.css'\r\nimport {useState} from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport logo from './../syllabyelogo.png';\r\nimport { gapi } from 'gapi-script';\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\n\r\n\r\nfunction Register() {\r\n    var CLIENT_ID\r\n    var API_KEY\r\n    var DISCOVERY_DOCS\r\n    var SCOPES\r\n\r\n    const res = fetch(\"http://localhost:1337/api/google-auth-keys\", {\r\n        method: \"GET\",\r\n    }).then((res) => res.json()\r\n    ).then((res) => {\r\n        CLIENT_ID = res.CLIENT_ID\r\n        API_KEY = res.API_KEY\r\n        DISCOVERY_DOCS = res.DISCOVERY_DOCS\r\n        SCOPES = res.SCOPES\r\n    });\r\n    \r\n    const navigate = useNavigate()\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [vPassword, setVPassword] = useState('');\r\n\r\n    function handleLoginAsk(e){\r\n        e.preventDefault();\r\n        navigate('/login');\r\n    }\r\n\r\n    async function registeredUser(event) {\r\n        event.preventDefault()\r\n\r\n        const response = await fetch('http://localhost:1337/api/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                password\r\n            }),\r\n        })\r\n\r\n        const data = await response.json();\r\n\r\n        if(data.status === 'ok'){\r\n            navigate('/login')\r\n        }\r\n    }\r\n\r\n    async function googleAuth() {\r\n        gapi.load('client:auth2', () => {\r\n            gapi.client.init({\r\n                apiKey: API_KEY,\r\n                clientId: CLIENT_ID,\r\n                discoveryDocs: [DISCOVERY_DOCS],\r\n                scope: SCOPES,\r\n            }).then(() => {\r\n                gapi.auth2.getAuthInstance().signIn().then(async () => {\r\n                    const google = await gapi.auth2.getAuthInstance().currentUser\r\n                    const googleToken = await google.get().getAuthResponse().id_token;\r\n                    const googleUser = await google.get().getBasicProfile();\r\n                    const userName = googleUser.getName();\r\n                    const userEmail = googleUser.getEmail();\r\n\r\n                    console.log(googleToken);\r\n                    console.log(userName);\r\n                    console.log(userEmail);\r\n\r\n                    const response = await fetch('http://localhost:1337/api/google-auth-register', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify({\r\n                            name: userName,\r\n                            email: userEmail,\r\n                            password: googleToken,\r\n                        }),\r\n                    })\r\n\r\n                    const data = await response.json();\r\n                    console.log(data);\r\n\r\n                    for (let i = 0; i < localStorage.length; i++) {\r\n                        const key = localStorage.key(i);\r\n                        if (key.startsWith('token')) {\r\n                          console.log(localStorage.getItem(key));\r\n                        }\r\n                    }\r\n\r\n                    if(data.status === 'ok'){\r\n                        console.log(\"Works\")\r\n                        localStorage.setItem('token', data.user)\r\n                        navigate('/home')\r\n                    }\r\n                    else if(data.status === 'error'){\r\n                        alert(\"You already have an account with this email. Please login instead.\")\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n            // const google = await gapi.auth2.getAuthInstance().currentUser\r\n            // const googleToken = await google.get().getAuthResponse().id_token;\r\n            // const googleUser = await google.get().getBasicProfile();\r\n            // const userName = googleUser.getName();\r\n            // const userEmail = googleUser.getEmail();\r\n\r\n\r\n\r\n\r\n\r\n            // console.log(await gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile());\r\n            // const googleUser = await gapi.auth2.getAuthInstance().currentUser.get();\r\n            // // console.log(googleUser);\r\n\r\n            \r\n            // // console.log(googleToken);\r\n            // const userName = await googleUser.getBasicProfile().getName();\r\n            // console.log(userName);\r\n            // const googleToken = googleUser.getAuthResponse().id_token;\r\n            // const userEmail = googleUser.getBasicProfile().getEmail();\r\n            // console.log(googleUser);\r\n            // console.log(googleToken);\r\n            // console.log(userName);\r\n            // console.log(userEmail);\r\n\r\n\r\n            // const googleToken = await gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().id_token;\r\n            // const googleUser = await gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();\r\n            // const userName = await gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getName();\r\n            // const userEmail = await gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getEmail();\r\n\r\n            // const response = await fetch('http://localhost:1337/api/google-auth-register', {\r\n            //     method: 'POST',\r\n            //     headers: {\r\n            //         'Content-Type': 'application/json'\r\n            //     },\r\n            //     body: JSON.stringify({\r\n            //         token: googleToken,\r\n            //         name: userName,\r\n            //         email: userEmail,\r\n            //     })\r\n            // })\r\n            \r\n    //         const response = await fetch('http://localhost:1337/api/google-auth-register', {\r\n    //             method: 'POST',\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json'\r\n    //             },\r\n    //             body: JSON.stringify({\r\n    //                 token: gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().id_token,\r\n    //                 name: gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getName(),\r\n    //                 email: gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getEmail(),\r\n    //             })\r\n    //         })\r\n\r\n    //         const data = await response.json()\r\n\r\n    //         if(data.status === 'ok'){\r\n    //             console.log(\"Works\")\r\n    //             localStorage.setItem('token', data.user)\r\n    //             navigate('/home')\r\n    //         }\r\n    //         else if(data.status === 'error'){\r\n    //             alert(\"You already have an account with this email. Please login instead.\")\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <div className = \"nameEnc\">\r\n                    <label for=\"nameField\" id=\"name\"><img src={logo}/></label>\r\n                </div>\r\n            </header>\r\n            <div className = \"Form\">\r\n                <div className = \"RealForm\">\r\n                    <label for=\"signupField\" id=\"signup\">Sign Up</label>\r\n                    <label for=\"personNameField\" class = \"labels\" id = \"personName\">Name</label>\r\n                    <form onSubmit = {registeredUser}>\r\n                        <input\r\n                            class = \"inputs\"\r\n                            value = {name}\r\n                            onChange = {(e) => setName(e.target.value)}\r\n                            type=\"text\"  \r\n                        />\r\n                        <br />\r\n                        <label for=\"emailField\" class = \"labels\" id = \"email\">Email</label>\r\n                        <input \r\n                            class = \"inputs\"\r\n                            value = {email}\r\n                            onChange = {(e) => setEmail(e.target.value)}\r\n                            type=\"text\"  \r\n                        />\r\n                        <br />\r\n                        <label for=\"passwordField\" class = \"labels\" id = \"password\">Password</label>\r\n                        {/* <br /> */}\r\n                        <input \r\n                            class = \"inputs\"\r\n                            value = {password}\r\n                            onChange = {(e) => setPassword(e.target.value)}\r\n                            type=\"password\"  \r\n                        />\r\n                        <br />\r\n                        <label for=\"verifypwField\" class = \"labels\" id = \"verifypw\">Verify password</label>\r\n                        {/* <br /> */}\r\n                        \r\n                        <input \r\n                            class = \"inputs\"\r\n                            value = {vPassword}\r\n                            onChange = {(e) => setVPassword(e.target.value)}\r\n                            type=\"password\"  \r\n                        />\r\n                        <br />\r\n                        <input id=\"signupButton\" className=\"Buttons\" type=\"submit\" value=\"Sign Up\"/>\r\n                        \r\n                    </form>\r\n                    <GoogleOAuthProvider clientId=\"436198478288-efo40fbhrj324kk9uktqfr20tthrt5dk.apps.googleusercontent.com\">\r\n                        <GoogleLogin\r\n                            onSuccess={googleAuth}\r\n                            onError={() => {\r\n                                console.log('Login Failed');\r\n                            }}\r\n                        />\r\n                    </GoogleOAuthProvider>\r\n                    <p id = \"yesAccount\">Already have an account?</p>\r\n                    <input className='Buttons' id=\"signinButton3\" type=\"submit\" value=\"Click here to sign in.\" onClick={handleLoginAsk}/>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n",[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\Login.js",["99","100"],[],"import './Login.css';\r\nimport {useState} from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport logo from './../syllabyelogo.png';\r\nimport { gapi } from 'gapi-script';\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\n\r\nfunction Login() {\r\n    var CLIENT_ID\r\n    var API_KEY\r\n    var DISCOVERY_DOCS\r\n    var SCOPES\r\n\r\n    const res = fetch(\"http://localhost:1337/api/google-auth-keys\", {\r\n        method: \"GET\",\r\n    }).then((res) => res.json()\r\n    ).then((res) => {\r\n        CLIENT_ID = res.CLIENT_ID\r\n        API_KEY = res.API_KEY\r\n        DISCOVERY_DOCS = res.DISCOVERY_DOCS\r\n        SCOPES = res.SCOPES\r\n    });\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    function handleRegisterAsk(e){\r\n        e.preventDefault();\r\n        navigate('/register');\r\n    }\r\n\r\n    async function loginUser(event) {\r\n        event.preventDefault()\r\n\r\n        const response = await fetch('http://localhost:1337/api/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            }),\r\n        })\r\n        \r\n        const data = await response.json();\r\n        \r\n        if(data.user){\r\n            localStorage.setItem('token', data.user)\r\n            navigate('/home')\r\n        }\r\n        else{\r\n            //add error message\r\n        }\r\n    }\r\n\r\n    async function googleAuth() {\r\n        gapi.load('client:auth2', () => {\r\n            gapi.client.init({\r\n                apiKey: API_KEY,\r\n                clientId: CLIENT_ID,\r\n                discoveryDocs: [DISCOVERY_DOCS],\r\n                scope: SCOPES,\r\n            }).then(() => {\r\n                gapi.auth2.getAuthInstance().signIn().then(async () => {\r\n                    const google = await gapi.auth2.getAuthInstance().currentUser\r\n                    const googleUser = await google.get().getBasicProfile();\r\n                    const userName = googleUser.getName();\r\n                    const userEmail = googleUser.getEmail();\r\n\r\n                    console.log(userName);\r\n                    console.log(userEmail);\r\n\r\n                    const response = await fetch('http://localhost:1337/api/google-auth-login', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify({\r\n                            name: userName,\r\n                            email: userEmail,\r\n                        }),\r\n                    })\r\n\r\n                    const data = await response.json();\r\n                    console.log(data);\r\n\r\n                    for (let i = 0; i < localStorage.length; i++) {\r\n                        const key = localStorage.key(i);\r\n                        if (key.startsWith('token')) {\r\n                          console.log(localStorage.getItem(key));\r\n                        }\r\n                    }\r\n\r\n                    if(data.status === 'ok'){\r\n                        console.log(\"Works\")\r\n                        localStorage.setItem('token', data.user)\r\n                        navigate('/home')\r\n                    }\r\n                    else if(data.status === 'error'){\r\n                        alert(\"You already have an account with this email. Please login instead.\")\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"App2\">\r\n            <header className=\"App-header2\">\r\n                <div className = \"nameEnc2\">\r\n                    <label for=\"nameField2\" id=\"name2\"><img src={logo}/></label>\r\n                </div>\r\n            </header>\r\n            <div className = \"Form2\">\r\n                <div className = \"RealForm2\">\r\n                    <form onSubmit = {loginUser}>\r\n                        <label for=\"signinField\" id=\"signin\">Sign In</label>\r\n                        <label for=\"personNameField\" class = \"labels2\" id = \"personName\">Username</label>\r\n                        <input \r\n                            class=\"inputs2\"\r\n                            value = {email}\r\n                            onChange = {(e) => setEmail(e.target.value)}\r\n                            type=\"text\"  \r\n                        />\r\n                        <br />\r\n                        <label for=\"passwordField\" class = \"labels2\" id = \"password\">Password </label>\r\n                        {/* <br /> */}\r\n                        <input \r\n                            class=\"inputs2\"\r\n                            value = {password}\r\n                            onChange = {(e) => setPassword(e.target.value)}\r\n                            type=\"password\"  \r\n                        />\r\n                        <br />\r\n                        <input className='Buttons' id=\"signinButton\" type=\"submit\" value=\"Sign In\"/>\r\n                        <br />\r\n                        <p id = \"noAccount\">Don't have an account?</p>\r\n                        <input className='Buttons' id=\"signupButton2\" type=\"submit\" value=\"Click here to sign up.\" onClick={handleRegisterAsk}/>\r\n                        <br />\r\n                        \r\n                    </form>\r\n                    <GoogleOAuthProvider clientId=\"436198478288-efo40fbhrj324kk9uktqfr20tthrt5dk.apps.googleusercontent.com\">\r\n                        <GoogleLogin\r\n                            id = \"googleButton\"\r\n                            onSuccess={googleAuth}\r\n                            onError={() => {\r\n                                console.log('Login Failed');\r\n                            }}\r\n                        />\r\n                    </GoogleOAuthProvider>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\ImageGrid.js",["101"],[],"import React from \"react\";\r\nimport trash from \"./delete-icon.png\";\r\n\r\nconst Image = ({ image, onDelete }) => {\r\n\r\n  async function deleteImage() {\r\n    const res = await fetch(\"http://localhost:1337/api/delete\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify({ thumbnail: image.src }),\r\n    })\r\n\r\n    if(res){\r\n      onDelete(image.id);\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n    \r\n    <div className=\"file-item\">\r\n      <button className=\"delete\" onClick={deleteImage}></button>\r\n      {image.isPdf ? (\r\n        <div className=\"pdf-icon\">PDF</div>\r\n      ) : (\r\n        <img\r\n          alt={`img - ${image.id}`}\r\n          src={image.src}\r\n          className=\"file-img\"\r\n        />\r\n      )}\r\n\r\n      \r\n      <button type=\"button\" className=\"pdf-label\">{image.name}</button>\r\n      \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nfunction ImageGrid({ images, onDelete }) {\r\n\r\n  const renderImage = (image) => {\r\n    return <Image image={image} key={`${image.id}-image`} onDelete={onDelete}/> ;\r\n  };\r\n\r\n  return (\r\n    <section className=\"file-list\">{images.map(renderImage)}</section>\r\n  );\r\n};\r\n\r\nexport default ImageGrid;","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\Dropzone.js",["102","103","104","105","106"],[],"import React from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"./Dropzone.css\";\r\nimport { Document, Page } from 'react-pdf';\r\n\r\nfunction Dropzone({ onDrop, accept, open }) {\r\n\r\n  const { getRootProps, getInputProps, isDragActive, acceptedFiles, fileRejections } =\r\n    useDropzone({\r\n      accept: \"./pdf\", onDrop,\r\n    });\r\n\r\n  const files = acceptedFiles.map((file) => (\r\n     <li key={file.path}>\r\n       {file.path} - {file.size} bytes\r\n     </li>\r\n   ));\r\n\r\n  acceptedFiles.forEach((file) => {\r\n    \r\n  });\r\n\r\n  // const inpFile = document.getElementById('inpFile');\r\n  // // const btnUpload = document.getElementById('btnUpload');\r\n\r\n  // async function clickUpload() {\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"pdfFile\", inpFile.files[0]);\r\n  //   // console.log(\"test\");\r\n  //   const res = await fetch(\"http://localhost:1337/extract-text\", {\r\n  //       method: \"post\",\r\n  //       body: formData\r\n  //   });\r\n\r\n  //   const extractedText = await res.json();\r\n  //   if (extractedText) {\r\n  //      console.log(extractedText);\r\n  //      return extractedText;\r\n  //   }\r\n  //   else{\r\n  //     return \"Error\";\r\n  //   }\r\n  // }\r\n\r\n  // btnUpload.addEventListener(\"click\", () => {\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"pdfFile\", inpFile.files[0]);\r\n  //   fetch(\"/extract-text\", {\r\n  //       method: \"post\",\r\n  //       body: formData\r\n  //   }).then(response => {\r\n  //       return response.text();\r\n  //   }).then(extractedText => {\r\n  //       resultText.value = extractedText;\r\n  //   })\r\n  // });\r\n\r\n  const acceptedFileItems = acceptedFiles.map(file => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  const fileRejectionItems = fileRejections.map(({ file, errors }) => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n      <ul>\r\n        {errors.map(e => (\r\n          <li key={e.code}>{e.message}</li>\r\n        ))}\r\n      </ul>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input className=\"input-zone\" {...getInputProps()} />\r\n        <div className=\"text-center\">\r\n          {isDragActive ? (\r\n            <p className=\"dropzone-content\">\r\n              Release to drop the files here\r\n            </p>\r\n          ) : (\r\n            <p className=\"dropzone-content\">\r\n              Drag’ n’ drop some files here, or click to select files.\r\n              <br></br>\r\n              Only accepts PDF files. \r\n            </p>\r\n            )}\r\n          \r\n          { <div id=\"smolBtn\" onClick={open}>\r\n            \r\n          </div> }\r\n          {/* <input type=\"file\" id=\"inpFile\"/>\r\n          <button type=\"button\" id=\"btnUpload\">Upload</button> */}\r\n        </div>\r\n        {/* { <aside>\r\n        <h4>Accepted files</h4>\r\n        <ul>{acceptedFileItems}</ul>\r\n        <h4>Rejected files</h4>\r\n        <ul>{fileRejectionItems}</ul>\r\n      </aside> } */}\r\n      </div>\r\n    </div>\r\n  );\r\n  // return (\r\n  //   <div>\r\n  //     <input type=\"file\" id=\"inpFile\"/>\r\n  //     <input\r\n  //       type=\"button\"\r\n  //       id=\"btnUpload\"\r\n  //       value=\"Upload\"\r\n  //       onClick={() => { clickUpload() }}\r\n  //     />\r\n  //   </div>\r\n  // );\r\n\r\n}\r\n\r\nexport default Dropzone;","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\Home.js",["107","108","109","110","111","112","113"],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\index.js",[],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\App.js",[],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\Welcome.js",["114"],[],"import './Welcome.css';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport logo from './../syllabyelogo.png';\r\n//import { Box } from '@mui/material';\r\n\r\nfunction Welcome() {\r\n    const navigate = useNavigate()\r\n    function handleLoginAsk(e){\r\n        e.preventDefault();\r\n        navigate('/login');\r\n    }\r\n\r\n    function handleRegisterAsk(e){\r\n        e.preventDefault();\r\n        navigate('/register');\r\n    }\r\n    \r\n  return (\r\n    <div className=\"App3\">\r\n        <header className=\"App-header3\">\r\n            <div className = \"nameEnc3\">\r\n                <label for=\"nameField3\" id=\"name3\"><img src={logo}/></label>\r\n            </div>\r\n        </header>\r\n        <div className = \"Form3\">\r\n            <div className = \"RealForm3\">\r\n                <label for=\"signinField\" id=\"signin2\">Welcome to Syllabye</label>\r\n                <p for=\"welcoming\" id = \"welcomeMessage\">The web app that will organize your classes for you. Sign up to get started.</p>\r\n                <div className = \"Buttons\">\r\n                    <input id=\"signinButton2\" type=\"submit\" value=\"Sign In\" onClick={handleLoginAsk}/>\r\n                    <input id=\"signupButton3\" type=\"submit\" value=\"Sign Up\" onClick={handleRegisterAsk}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Welcome;","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\CalendarPg.js",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145"],[],"import { React, useEffect, useState } from 'react';\r\nimport Header from \"./components/Header\";\r\nimport { gapi } from 'gapi-script';\r\n\r\nfunction CalendarPg() {\r\n    var CLIENT_ID\r\n    var API_KEY\r\n    var DISCOVERY_DOCS\r\n    var SCOPES\r\n    var calendarID\r\n    const dateKeywords = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n    const res = fetch(\"http://localhost:1337/api/google-auth-keys\", {\r\n        method: \"GET\",\r\n    }).then((res) => res.json()\r\n    ).then((res) => {\r\n        CLIENT_ID = res.CLIENT_ID\r\n        API_KEY = res.API_KEY\r\n        DISCOVERY_DOCS = res.DISCOVERY_DOCS\r\n        SCOPES = res.SCOPES\r\n    });\r\n\r\n    // const Cres = fetch(\"http://localhost:1337/api/getCalendarID\", {\r\n    //     method: \"GET\",\r\n    //     headers: {\"x-access-token\" : localStorage.getItem(\"token\"),},\r\n    // }).then((res) => res.json()\r\n    // ).then((res) => {\r\n    //     calendarID = res.calendarID\r\n    // });\r\n\r\n    useEffect(() => {\r\n        gapi.load('client:auth2', async () => {\r\n            console.log('loaded client')\r\n\r\n            gapi.client.init({\r\n                apiKey: API_KEY,\r\n                clientId: CLIENT_ID,\r\n                discoveryDocs: [DISCOVERY_DOCS],\r\n                scope: SCOPES,\r\n            })\r\n\r\n            gapi.client.load('calendar', 'v3', () => console.log('bam!'))\r\n\r\n            const cres = await fetch(\"http://localhost:1337/api/getCalendarID\", {\r\n                method: \"GET\",\r\n                headers: {\"x-access-token\" : localStorage.getItem(\"token\"),},\r\n            })\r\n            const cdata = await cres.json();\r\n            calendarID = cdata.calendarID\r\n\r\n            if (calendarID == null) {\r\n                gapi.auth2.getAuthInstance().isSignedIn.listen(() => {\r\n                    try{\r\n                        const userProfile = gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();\r\n                        const userEmail = userProfile.getEmail();\r\n                        let calendarEmbedUrl = \"https://calendar.google.com/calendar/embed?src=\" + userEmail + \"&ctz=America%2FCentral\";\r\n                        const calendarFrame = document.createElement('iframe');\r\n                        calendarFrame.setAttribute('src', calendarEmbedUrl);\r\n                        calendarFrame.setAttribute('style', 'border-width:0; width:100vw; height:100vh; framework:0');\r\n                        document.getElementById('calendar-container').appendChild(calendarFrame);\r\n                    }\r\n                    catch(err){\r\n                        console.log(err)\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                gapi.auth2.getAuthInstance().isSignedIn.listen(() => {\r\n                    try{\r\n                        const userProfile = gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();\r\n                        const userEmail = userProfile.getEmail();\r\n                        let calendarEmbedUrl = \"https://calendar.google.com/calendar/embed?src=\" + userEmail  + \"&src=\" + calendarID + \"&ctz=America%2FCentral\";\r\n                        const calendarFrame = document.createElement('iframe');\r\n                        calendarFrame.setAttribute('src', calendarEmbedUrl);\r\n                        calendarFrame.setAttribute('style', 'border-width:0; width:100vw; height:100vh; framework:0');\r\n                        document.getElementById('calendar-container').appendChild(calendarFrame);\r\n                    }\r\n                    catch(err){\r\n                        console.log(err)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    async function eventUpload() {\r\n        const temp = []\r\n        const year = []\r\n        const ev = []\r\n        const name = []\r\n        var syllabyeCalendarId = \"\"\r\n\r\n        var req = await gapi.client.calendar.calendarList.list();\r\n        // console.log(req);\r\n\r\n        if(calendarID == null){\r\n            const calendars = req.result.items;\r\n            for (var i = 0; i < calendars.length; i++) {\r\n                console.log(calendars[i].summary);\r\n                if (calendars[i].summary == \"Syllabye\") {\r\n                    var syllabyeCalendar = calendars[i];\r\n                    break;\r\n                }\r\n            }\r\n            console.log(syllabyeCalendar);\r\n            syllabyeCalendarId = syllabyeCalendar.id;\r\n\r\n\r\n            fetch(\"http://localhost:1337/api/postCalendarID\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"x-access-token\" : localStorage.getItem(\"token\"),\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    calendarID: syllabyeCalendarId,\r\n                })\r\n            })\r\n\r\n            calendarID = syllabyeCalendarId\r\n        }\r\n\r\n        const files = await fetch(\"http://localhost:1337/api/files\", {\r\n            method: \"GET\",\r\n            headers: {\"x-access-token\" : localStorage.getItem(\"token\"),},\r\n        })\r\n\r\n        const filesJson = await files.json()\r\n        filesJson.forEach((file) => {\r\n            name.push(file.fileData.courseNum);\r\n            temp.push(file.fileData.calendar);\r\n            let term = file.fileData.term;\r\n            year.push(term.split(\" \")[1]);\r\n        })\r\n\r\n        // console.log(temp)\r\n        for (let i = 0; i < temp.length; i++) {\r\n            for (let j = 0; j < temp[i].length; j++) {\r\n                if ((temp[i][j].assignment[0] != \"None\" || temp[i][j].important[0] != \"None\") && temp[i][j].date[0] != \"None\") {\r\n                    if(temp[i][j].important[0] != \"None\"){\r\n                        let month = \"\";\r\n                        let day = \"\";\r\n                        if(temp[i][j].important[0].includes(\" | \")){\r\n                            let important = temp[i][j].important[0].split(\" | \");\r\n                            if(important[0].includes(\"/\")){\r\n                                month = important[0].split(\"/\")[0];\r\n                                day = important[0].split(\"/\")[1];\r\n                                if (month.length == 1) {\r\n                                    month = \"0\" + month;\r\n                                }\r\n                                if (day.length == 1) {\r\n                                    day = \"0\" + day;\r\n                                }\r\n                            }\r\n                            else{\r\n                                for(let k = 0; k < dateKeywords.length; k++){\r\n                                    if(important[0].includes(dateKeywords[k])){\r\n                                        month = (k + 1).toString();\r\n                                        day = important[0].split(\" \")[1];\r\n                                        if (month.length == 1) {\r\n                                            month = \"0\" + month;\r\n                                        }\r\n                                        if (day.length == 1) {\r\n                                            day = \"0\" + day;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            ev.push({\r\n                                'summary': name[i] + \" \" + important[1],\r\n                                'start':{\r\n                                    'date': year[i]+\"-\"+month+\"-\"+day,\r\n                                    'timeZone': 'America/Chicago'\r\n                                },\r\n                                'end':{\r\n                                    'date': year[i]+\"-\"+month+\"-\"+day,\r\n                                    'timeZone': 'America/Chicago'\r\n                                },\r\n                                'reminders': {\r\n                                    'useDefault': false,\r\n                                    'overrides': [\r\n                                        {'method': 'email', 'minutes': 24 * 60},\r\n                                        {'method': 'popup', 'minutes': 10}\r\n                                    ]\r\n                                }\r\n                            })\r\n                        }\r\n                        else{\r\n                            let d = temp[i][j].date[temp[i][j].date.length - 1]\r\n                            if(d.includes(\"/\")){\r\n                                month = d.split(\"/\")[0];\r\n                                day = d.split(\"/\")[1];\r\n                                if (month.length == 1) {\r\n                                    month = \"0\" + month;\r\n                                }\r\n                                if (day.length == 1) {\r\n                                    day = \"0\" + day;\r\n                                }\r\n                            }\r\n                            else{\r\n                                for(let k = 0; k < dateKeywords.length; k++){\r\n                                    if(d.includes(dateKeywords[k])){\r\n                                        month = (k + 1).toString();\r\n                                        day = d.split(\" \")[1];\r\n                                        if (month.length == 1) {\r\n                                            month = \"0\" + month;\r\n                                        }\r\n                                        if (day.length == 1) {\r\n                                            day = \"0\" + day;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            ev.push({\r\n                                'summary': name[i] + \" \" + temp[i][j].important[0],\r\n                                'start':{\r\n                                    'date': year[i]+\"-\"+month+\"-\"+day,\r\n                                    'timeZone': 'America/Chicago'\r\n                                },\r\n                                'end':{\r\n                                    'date': year[i]+\"-\"+month+\"-\"+day,\r\n                                    'timeZone': 'America/Chicago'\r\n                                },\r\n                                'reminders': {\r\n                                    'useDefault': false,\r\n                                    'overrides': [\r\n                                        {'method': 'email', 'minutes': 24 * 60},\r\n                                        {'method': 'popup', 'minutes': 10}\r\n                                    ]\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                    if(temp[i][j].assignment[0] != \"None\"){\r\n                        let month = \"\"\r\n                        let day = \"\"\r\n                        let d = temp[i][j].date[temp[i][j].date.length - 1]\r\n                        if(d.includes(\"/\")){\r\n                            month = d.split(\"/\")[0];\r\n                            day = d.split(\"/\")[1];\r\n                            if (month.length == 1) {\r\n                                month = \"0\" + month;\r\n                            }\r\n                            if (day.length == 1) {\r\n                                day = \"0\" + day;\r\n                            }\r\n                        }\r\n                        else{\r\n                            for(let k = 0; k < dateKeywords.length; k++){\r\n                                if(d.includes(dateKeywords[k])){\r\n                                    month = (k + 1).toString();\r\n                                    day = d.split(\" \")[1];\r\n                                    if (month.length == 1) {\r\n                                        month = \"0\" + month;\r\n                                    }\r\n                                    if (day.length == 1) {\r\n                                        day = \"0\" + day;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        ev.push({\r\n                            'summary': name[i] + \" \" + temp[i][j].assignment[0],\r\n                            'start':{\r\n                                'date': year[i]+\"-\"+month+\"-\"+day,\r\n                                'timeZone': 'America/Chicago'\r\n                            },\r\n                            'end':{\r\n                                'date': year[i]+\"-\"+month+\"-\"+day,\r\n                                'timeZone': 'America/Chicago'\r\n                            },\r\n                            'reminders': {\r\n                                'useDefault': false,\r\n                                'overrides': [\r\n                                    {'method': 'email', 'minutes': 24 * 60},\r\n                                    {'method': 'popup', 'minutes': 10}\r\n                                ]\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var currentYear = new Date().getFullYear();\r\n        var beginningOfYear = new Date(currentYear, 0, 1); // January 1st of current year\r\n        var time = beginningOfYear.toISOString();\r\n\r\n        var request = gapi.client.calendar.events.list({\r\n            'calendarId': calendarID,\r\n            'timeMin': time,\r\n            'showDeleted': false,\r\n            'singleEvents': true,\r\n            'maxResults': 100,\r\n            'orderBy': 'startTime'\r\n        })\r\n\r\n        request.execute( (resp) => {\r\n            var events = resp.items;\r\n            var batch = gapi.client.newBatch();\r\n\r\n            for (var i = 0; i < events.length; i++) {\r\n                var event = events[i];\r\n                var when = event.start.dateTime;\r\n                if (!when) {\r\n                    when = event.start.date;\r\n                    for (var j = 0; j < ev.length; j++) {\r\n                        if (ev[j].summary == (event.summary) && ev[j].start.date == (event.start.date)) {\r\n                            ev.splice(j, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (var i = 0; i < ev.length; i++) {\r\n                batch.add(gapi.client.calendar.events.insert({\r\n                    'calendarId': calendarID,\r\n                    'resource': ev[i]\r\n                }));\r\n            }\r\n        \r\n            batch.execute(function(resp, raw) {\r\n                console.log(resp);\r\n            });\r\n        })\r\n\r\n        try{\r\n            const userProfile = gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();\r\n            const userEmail = userProfile.getEmail();\r\n            let calendarEmbedUrl = \"https://calendar.google.com/calendar/embed?src=\" + userEmail  + \"&src=\" + calendarID + \"&ctz=America%2FCentral\";\r\n            const calendarFrame = document.createElement('iframe');\r\n            calendarFrame.setAttribute('src', calendarEmbedUrl);\r\n            calendarFrame.setAttribute('style', 'border-width:0; width:100vw; height:100vh; framework:0');\r\n            const oldCalendarFrame = document.getElementById('calendar-container').getElementsByTagName('iframe')[0];\r\n            oldCalendarFrame.parentNode.removeChild(oldCalendarFrame);\r\n            document.getElementById('calendar-container').appendChild(calendarFrame);\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n\r\n    }\r\n\r\n    const handleClick = () => {\r\n        console.log(gapi);\r\n        const temp = []\r\n        const year = []\r\n        const ev = []\r\n        const name = []\r\n        var syllabyeCalendarId = \"\"\r\n        gapi.load('client:auth2', async () => {\r\n          console.log('loaded client')\r\n    \r\n            gapi.client.init({\r\n                apiKey: API_KEY,\r\n                clientId: CLIENT_ID,\r\n                discoveryDocs: [DISCOVERY_DOCS],\r\n                scope: SCOPES,\r\n            })\r\n    \r\n            gapi.client.load('calendar', 'v3', () => console.log('Success!'))\r\n\r\n            var req = await gapi.client.calendar.calendarList.list({});\r\n\r\n            if (calendarID == null) {\r\n                console.log(\"test\")\r\n                console.log(req);\r\n                var status = false;\r\n                for (var i = 0; i < req.result.items.length; i++) {\r\n                    if (req.result.items[i].summary == \"Syllabye\") {\r\n                        status = true;\r\n                    }\r\n                }\r\n\r\n                if (status == false) {\r\n                    var req2 = gapi.client.calendar.calendars.insert({\r\n                        'summary': 'Syllabye',\r\n                        'timeZone': 'America/Chicago',\r\n                    });\r\n                    await req2.execute(async function(resp) {\r\n                        console.log(\"Calendar Created1\");\r\n                        console.log(resp);\r\n                        eventUpload();\r\n                    });\r\n                }\r\n                else{\r\n                    eventUpload();\r\n                }\r\n            }\r\n            else{\r\n                eventUpload();\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <main>\r\n            <Header/>\r\n            <div>  \r\n                <div id=\"calendar-container\"></div>\r\n                <button onClick={handleClick} class=\"Events\">Add Events</button>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default CalendarPg;","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\FileDetails.js",["146","147","148"],[],"import './FileDetails.css';\nimport React from \"react\";\nimport Popup from 'reactjs-popup';\nimport ReactModal from 'react-modal';\nimport NavBar from \"./NavBar\"\nimport Header from \"./components/Header\";\nimport {useLocation} from 'react-router-dom';\nimport {useEffect, useState, useCallback} from \"react\";\nimport TeacherInfo from \"./components/TeacherInfo\";\nimport Description from \"./components/Description\";\nimport GradeDistribution from \"./components/GradeDistribution\";\nimport Dates from \"./components/Dates\";\nimport * as jose from 'jose'\n\nconst token = localStorage.getItem('token')\nconst user = jose.decodeJwt(token)\nconst userName = user.name;\n\n// class FileDetails extends React.Component{\n//     constructor(props){\n//         super(props);\n//         this.state = {classInfo: [], grades: [], numGrades: 0, gradeDistribution: [], dates: []};\n//         this.state.classInfo.push({field: 'Name', info: 'Rahul Karthik'});\n//         this.state.classInfo.push({field: 'Email', info: 'rk@gmail.com'});\n//         this.state.classInfo.push({field: 'Class times', info: 'Tuesday & Thursday, 8:30am - 9:45am'});\n//         this.state.classInfo.push({field: 'Office hours', info: '4:00pm - 5:15pm'});\n//         this.state.classInfo.push({field: 'Classroom', info: 'ECSS 2.410'});\n//         this.state.grades.push([]);\n//         this.state.grades.push([]);\n//         this.state.grades.push([]);\n//         this.state.grades.push([]);\n//         this.state.grades.push([]);\n//         this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '97-100', grade: 'A+'});\n//         this.state.numGrades = this.state.numGrades + 1;\n//         this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '94-96', grade: 'A'});\n//         this.state.numGrades++;\n//         this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '90-92', grade: 'A-'});\n//         this.state.numGrades++;\n//         this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '87-89', grade: 'B+'});\n//         this.state.numGrades++;\n//         this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '83-86', grade: 'B'});\n//         this.state.numGrades++;\n//         this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '80-82', grade: 'B-'});\n//         this.state.numGrades++;\n//         this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '77-79', grade: 'C+'});\n//         this.state.numGrades++;\n//         this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '73-76', grade: 'C'});\n//         this.state.numGrades++;\n//         this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '70-72', grade: 'C-'});\n//         this.state.numGrades++;\n//         this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '67-69', grade: 'D+'});\n//         this.state.numGrades++;\n//         this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '63-66', grade: 'D'});\n//         this.state.numGrades++;\n//         this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '60-62', grade: 'D-'});\n//         this.state.numGrades++;\n//         this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '0-60', grade: 'F'});\n//         this.state.numGrades++;\n\nfunction FileDetails(){\n    \n\n    const {state} = useLocation();\n    const {courses, index} = state;\n    const [classInfo, setClassInfo] = useState(courses[index].classInfo);\n    // const [grades, setGrades] = useState(courses[index].grades);\n    const [description, setDescription] = useState(courses[index].description);\n    const [gradeDistribution, setGradeDistribution] = useState(courses[index].gradeDistribution);\n    const [dates, setDates] = useState(courses[index].dates);\n    const [showPopup, setPopupStatus] = useState(false);\n    // this.state = {classInfo: courses[index].classInfo, grades: courses[index].grades, gradeDistribution: courses[index].gradeDistribution, dates: courses[index].dates}\n    // setClassInfo(courses[index].classInfo);\n    // setGrades(courses[index].grades);\n    // setGradeDistribution(courses[index].grades);\n    // setDates(courses[index].dates);\n    function changeClass(e){\n        setClassInfo(courses[e.target.id].classInfo);\n        // setGrades(courses[e.target.id].grades);\n        setDescription(courses[e.target.id].description);\n        setGradeDistribution(courses[e.target.id].gradeDistribution);\n        setDates(courses[e.target.id].dates);\n    }\n    function addTeacherInfo(){\n        setPopupStatus(!showPopup);\n    }\n    return(\n        <div className=\"page\">\n            <Header />\n            <div className = \"detailComps\">\n                <NavBar username={userName} items = {courses.map(c => c.course)} id=\"navigationBar\" changeClass={changeClass}/>\n                <div className = \"info\">\n                    <div className = \"firstrow\">\n                        <TeacherInfo items={classInfo} addField = {addTeacherInfo}/>\n                        <ReactModal isOpen = {showPopup} contentLabel = \"Please Work\"/>\n                        <Description items={description} addField = {addTeacherInfo}/>\n                    </div>\n                    <div className = \"secondrow\">\n                        <GradeDistribution items={gradeDistribution} addField = {addTeacherInfo}/>\n                        <Dates items={dates} addField = {addTeacherInfo}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default FileDetails;\n// class FileDetails extends React.Component{\n//     constructor(props){\n//         super(props);\n//         const {state} = useLocation();\n//         const {courses, index} = state;\n//         this.state = {classInfo: courses[index].classInfo, grades: courses[index].grades, gradeDistribution: courses[index].gradeDistribution, dates: courses[index].dates}\n//         return(\n//             <div className=\"page\">\n//             <div className = \"detailComps\">\n//             <NavBar username = \"k.rahul287\" items = {[\"CS 3345\", \"CS 3341\"]} id=\"navigationBar\" changeClass={this.changeClass}/>\n//             <div className = \"info\">\n//             <div className = \"firstrow\">\n//                 <TeacherInfo items={this.state.classInfo} />\n//                 <Grades items = {this.state.grades} />\n                \n//             </div>\n//             <div className = \"secondrow\">\n//                 <GradeDistribution items={this.state.gradeDistribution}/>\n//                 <Dates items={this.state.dates}/>\n//             </div>\n//             </div>\n//             </div>\n//             </div>\n//         );\n//         // this.state = props.courses[props.index];\n//         // this.state = {classInfo: [], grades: [], numGrades: 0, gradeDistribution: [], dates: []};\n//         // this.state.classInfo.push({field: 'Name', info: 'Rahul Karthik'});\n//         // this.state.classInfo.push({field: 'Email', info: 'rk@gmail.com'});\n//         // this.state.classInfo.push({field: 'Class times', info: 'Tuesday & Thursday, 8:30am - 9:45am'});\n//         // this.state.classInfo.push({field: 'Office hours', info: '4:00pm - 5:15pm'});\n//         // this.state.classInfo.push({field: 'Classroom', info: 'ECSS 2.410'});\n//         // this.state.grades.push([]);\n//         // this.state.grades.push([]);\n//         // this.state.grades.push([]);\n//         // this.state.grades.push([]);\n//         // this.state.grades.push([]);\n//         // this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '97-100', grade: 'A+'});\n//         // this.state.numGrades = this.state.numGrades + 1;\n//         // this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '94-96', grade: 'A'});\n//         // this.state.numGrades++;\n//         // this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '90-92', grade: 'A-'});\n//         // this.state.numGrades++;\n//         // this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '87-89', grade: 'B+'});\n//         // this.state.numGrades++;\n//         // this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '83-86', grade: 'B'});\n//         // this.state.numGrades++;\n//         // this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '80-82', grade: 'B-'});\n//         // this.state.numGrades++;\n//         // this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '77-79', grade: 'C+'});\n//         // this.state.numGrades++;\n//         // this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '73-76', grade: 'C'});\n//         // this.state.numGrades++;\n//         // this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '70-72', grade: 'C-'});\n//         // this.state.numGrades++;\n//         // this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '67-69', grade: 'D+'});\n//         // this.state.numGrades++;\n//         // this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '63-66', grade: 'D'});\n//         // this.state.numGrades++;\n//         // this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '60-62', grade: 'D-'});\n//         // this.state.numGrades++;\n//         // this.state.grades[Math.floor(this.state.numGrades/3)].push({range: '0-60', grade: 'F'});\n//         // this.state.numGrades++;\n\n//         // this.state.gradeDistribution.push({field: 'Homework', weight: '25%'});\n//         // this.state.gradeDistribution.push({field: 'Projects', weight: '30%'});\n//         // this.state.gradeDistribution.push({field: 'In class assignments', weight: '5%'});\n//         // this.state.gradeDistribution.push({field: 'Exams', weight: '40%'});\n\n//         // this.state.dates.push({assigned_date: '01-01-2023', due_date: '01-08-2023', assignment: 'Homework 1'});\n//         // this.state.dates.push({assigned_date: '01-08-2023', due_date: '01-15-2023', assignment: 'Homework 2'});\n//         // this.state.dates.push({assigned_date: '01-15-2023', due_date: '01-22-2023', assignment: 'Project 1'});\n//         // this.state.dates.push({assigned_date: '01-22-2023', due_date: '01-29-2023', assignment: 'Homework 3'});\n//         // this.state.dates.push({assigned_date: '01-29-2023', due_date: '02-05-2023', assignment: 'Homework 4'});\n//     }\n//     populateBlobs = () => {\n        \n//     }\n//     changeClass(){\n\n//     } \n//     render(){\n//         return(\n//             <div className=\"page\">\n//     <div className = \"detailComps\">\n//     <NavBar username = \"k.rahul287\" items = {[\"CS 3345\", \"CS 3341\"]} id=\"navigationBar\" changeClass={this.changeClass}/>\n//     <div className = \"info\">\n//     <div className = \"firstrow\">\n//         <TeacherInfo items={this.state.classInfo} />\n//         <Grades items = {this.state.grades} />\n        \n//     </div>\n//     <div className = \"secondrow\">\n//         <GradeDistribution items={this.state.gradeDistribution}/>\n//         <Dates items={this.state.dates}/>\n//     </div>\n//     </div>\n//     </div>\n//     </div>\n//         );\n//     }\n// }\n// // function FileDetails(){\n    \n// //     var grades = [];\n// //     grades.push([]);\n// //     grades.push([]);\n// //     grades.push([]);\n// //     grades.push([]);\n// //     grades.push([]);\n// //     grades[0].push({range: '97-100', grade: 'A+'});\n// //     grades[0].push({range: '94-96', grade: 'A'});\n// //     grades[0].push({range: '90-92', grade: 'A-'});\n// //     grades[1].push({range: '87-89', grade: 'B+'});\n// //     grades[1].push({range: '83-86', grade: 'B'});\n// //     grades[1].push({range: '80-82', grade: 'B-'});\n// //     grades[2].push({range: '77-79', grade: 'C+'});\n// //     grades[2].push({range: '73-76', grade: 'C'});\n// //     grades[2].push({range: '70-72', grade: 'C-'});\n// //     grades[3].push({range: '67-69', grade: 'D+'});\n// //     grades[3].push({range: '63-66', grade: 'D'});\n// //     grades[3].push({range: '60-62', grade: 'D-'});\n// //     grades[4].push({range: '0-60', grade: 'F'});\n// //     var gradeDistribution = [];\n// //     gradeDistribution.push({field: 'Homework', weight: '25%'});\n// //     gradeDistribution.push({field: 'Projects', weight: '30%'});\n// //     gradeDistribution.push({field: 'In class assignments', weight: '5%'});\n// //     gradeDistribution.push({field: 'Exams', weight: '40%'});\n// //     var dates = [];\n// //     dates.push({assigned_date: '01-01-2023', due_date: '01-08-2023', assignment: 'Homework 1'});\n// //     dates.push({assigned_date: '01-08-2023', due_date: '01-15-2023', assignment: 'Homework 2'});\n// //     dates.push({assigned_date: '01-15-2023', due_date: '01-22-2023', assignment: 'Project 1'});\n// //     dates.push({assigned_date: '01-22-2023', due_date: '01-29-2023', assignment: 'Homework 3'});\n// //     dates.push({assigned_date: '01-29-2023', due_date: '02-05-2023', assignment: 'Homework 4'});\n// //     // dates.push({date: '02-12-2023', assignment: 'Project 2'});\n// //     // dates.push({date: '02-19-2023', assignment: 'Exam 1'});\n// //     // dates.push({date: '02-26-2023', assignment: 'Homework 5'});\n// //     // dates.push({date: '03-05-2023', assignment: 'Homework 6'});\n// //     // dates.push({date: '03-12-2023', assignment: 'Project 3'});\n// //     // dates.push({date: '03-19-2023', assignment: 'In class assignment 1'});\n// //     // dates.push({date: '03-26-2023', assignment: 'In class assignment 2'});\n// //     // dates.push({date: '04-02-2023', assignment: 'Project 3'});\n// //     // dates.push({date: '05-01-2023', assignment: 'Exam 2'});\n// //     return(\n// //         <div className=\"page\">\n// //     <div className = \"firstrow\">\n// //         <TeacherInfo name = \"Rahul Karthik\" email = \"karthikrahul444@gmail.com\" classTimes = \"Tuesday & Thursday, 8:30am - 9:45am\" officeHours = \"4:00-5:15\" classroom = \"ECSS 2.410\" />\n// //         <Grades items = {grades} />\n        \n// //     </div>\n// //     <div className = \"secondrow\">\n// //         <GradeDistribution items={gradeDistribution}/>\n// //         <Dates items={dates}/>\n// //     </div>\n// //     </div>\n// //     );\n// // }","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\GradeDistribution.js",[],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\Header.js",["149","150"],[],"import \"./Header.css\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useNavigate} from 'react-router-dom'\r\nimport logo from './../../syllabyelogo.png';\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    async function logout() {\r\n        localStorage.removeItem('token')\r\n        navigate('/login')\r\n    }\r\n\r\n    async function home() {\r\n        navigate('/home')\r\n    }\r\n\r\n    async function calendar() {\r\n        window.location.replace(\"http://localhost:3000/calendar\")\r\n    }\r\n\r\n    return (\r\n\r\n        <header>\r\n            <a href='http://localhost:3000/home'> <img src={logo}/> </a>\r\n            <nav>\r\n            <button onClick={home} class=\"headerBtn\"> Home </button>\r\n            <button onClick={calendar} class=\"headerBtn\"> Calendar </button>\r\n            <button onClick={logout} class=\"headerBtn\">Logout</button>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n  \r\n  export default Header","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\TeacherInfo.js",["151","152"],[],"import React from 'react';\nimport Popup from 'reactjs-popup'\nimport PopupField from './PopupField';\nimport './TeacherInfo.css'\nfunction TeacherInfo(props){\n    return(\n        <div className = \"box\">\n            <div className = \"inlineForGood\">\n            <label id=\"namelabel\">Teacher/Class Info</label>\n            {/* <button className=\"addItem\" onChange = {props.addField}>+</button> */}\n            </div>\n            \n            <table className=\"infoList\">\n                {props.items.map(item => (\n                    <tr>\n                        <td id=\"fieldForTeacher\">{item.field}</td>\n                        <td>{item.info}</td>\n                    </tr>\n                    // <li>{item.field + \": \" + item.info}</li>\n                ))}\n            </table>\n        </div>\n        );\n}\n// class TeacherInfo extends React.Component{\n//     constructor(props){\n//         super(props);\n//         this.state = props;\n//     }\n//     render(){\n//         return(\n//             <div className = \"box\">\n//                 <label id=\"namelabel\">Teacher/Class Info</label>\n//                 <Popup trigger = {<button className=\"addItem\" onChange = {this.props.addField}>+</button>}>\n//                 <div>This is the popup</div>\n//                 </Popup>\n//                 <table className=\"infoList\">\n//                     {this.props.items.map(item => (\n//                         <tr>\n//                             <td id=\"fieldForTeacher\">{item.field}</td>\n//                             <td>{item.info}</td>\n//                         </tr>\n//                         // <li>{item.field + \": \" + item.info}</li>\n//                     ))}\n//                 </table>\n//             </div>\n//             );\n//     }\n// }\n// function TeacherInfo(props){\n//     return(\n//     <div className = \"box\">\n//         <label id=\"namelabel\">Teacher/Class Info</label>\n//         <table className=\"infoList\">\n//             {props.items.map(item => (\n//                 <tr>\n//                     <td id=\"fieldForTeacher\">{item.field}</td>\n//                     <td>{item.info}</td>\n//                 </tr>\n//                 // <li>{item.field + \": \" + item.info}</li>\n//             ))}\n//         </table>\n//     </div>\n//     );\n// }\nexport default TeacherInfo;","C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\Dates.js",[],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\NavBar.js",[],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\PopupField.js",["153"],[],"C:\\Users\\abugt\\ACM_Projects\\SyllaBye\\FrontEnd\\src\\pages\\components\\Description.js",[],[],{"ruleId":"154","severity":1,"message":"155","line":16,"column":11,"nodeType":"156","messageId":"157","endLine":16,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":187,"column":54,"nodeType":"160","endLine":187,"endColumn":71},{"ruleId":"154","severity":1,"message":"155","line":15,"column":11,"nodeType":"156","messageId":"157","endLine":15,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":115,"column":56,"nodeType":"160","endLine":115,"endColumn":73},{"ruleId":"154","severity":1,"message":"161","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":13},{"ruleId":"154","severity":1,"message":"162","line":4,"column":10,"nodeType":"156","messageId":"157","endLine":4,"endColumn":18},{"ruleId":"154","severity":1,"message":"163","line":4,"column":20,"nodeType":"156","messageId":"157","endLine":4,"endColumn":24},{"ruleId":"154","severity":1,"message":"164","line":13,"column":9,"nodeType":"156","messageId":"157","endLine":13,"endColumn":14},{"ruleId":"154","severity":1,"message":"165","line":58,"column":9,"nodeType":"156","messageId":"157","endLine":58,"endColumn":26},{"ruleId":"154","severity":1,"message":"166","line":64,"column":9,"nodeType":"156","messageId":"157","endLine":64,"endColumn":27},{"ruleId":"154","severity":1,"message":"162","line":8,"column":17,"nodeType":"156","messageId":"157","endLine":8,"endColumn":25},{"ruleId":"154","severity":1,"message":"163","line":8,"column":27,"nodeType":"156","messageId":"157","endLine":8,"endColumn":31},{"ruleId":"154","severity":1,"message":"167","line":12,"column":39,"nodeType":"156","messageId":"157","endLine":12,"endColumn":45},{"ruleId":"154","severity":1,"message":"168","line":12,"column":47,"nodeType":"156","messageId":"157","endLine":12,"endColumn":53},{"ruleId":"154","severity":1,"message":"164","line":64,"column":23,"nodeType":"156","messageId":"157","endLine":64,"endColumn":28},{"ruleId":"169","severity":1,"message":"170","line":98,"column":8,"nodeType":"171","endLine":98,"endColumn":10,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":101,"column":34,"nodeType":"175","messageId":"176","endLine":101,"endColumn":36},{"ruleId":"158","severity":1,"message":"159","line":22,"column":52,"nodeType":"160","endLine":22,"endColumn":69},{"ruleId":"154","severity":1,"message":"177","line":1,"column":28,"nodeType":"156","messageId":"157","endLine":1,"endColumn":36},{"ruleId":"154","severity":1,"message":"155","line":13,"column":11,"nodeType":"156","messageId":"157","endLine":13,"endColumn":14},{"ruleId":"169","severity":1,"message":"178","line":49,"column":26,"nodeType":"179","endLine":49,"endColumn":42},{"ruleId":"180","severity":1,"message":"181","line":100,"column":42,"nodeType":"182","messageId":"183","endLine":100,"endColumn":44},{"ruleId":"180","severity":1,"message":"184","line":139,"column":47,"nodeType":"182","messageId":"183","endLine":139,"endColumn":49},{"ruleId":"180","severity":1,"message":"184","line":139,"column":84,"nodeType":"182","messageId":"183","endLine":139,"endColumn":86},{"ruleId":"180","severity":1,"message":"184","line":139,"column":117,"nodeType":"182","messageId":"183","endLine":139,"endColumn":119},{"ruleId":"180","severity":1,"message":"184","line":140,"column":48,"nodeType":"182","messageId":"183","endLine":140,"endColumn":50},{"ruleId":"180","severity":1,"message":"181","line":148,"column":50,"nodeType":"182","messageId":"183","endLine":148,"endColumn":52},{"ruleId":"180","severity":1,"message":"181","line":151,"column":48,"nodeType":"182","messageId":"183","endLine":151,"endColumn":50},{"ruleId":"180","severity":1,"message":"181","line":160,"column":58,"nodeType":"182","messageId":"183","endLine":160,"endColumn":60},{"ruleId":"180","severity":1,"message":"181","line":163,"column":56,"nodeType":"182","messageId":"183","endLine":163,"endColumn":58},{"ruleId":"180","severity":1,"message":"181","line":193,"column":50,"nodeType":"182","messageId":"183","endLine":193,"endColumn":52},{"ruleId":"180","severity":1,"message":"181","line":196,"column":48,"nodeType":"182","messageId":"183","endLine":196,"endColumn":50},{"ruleId":"180","severity":1,"message":"181","line":205,"column":58,"nodeType":"182","messageId":"183","endLine":205,"endColumn":60},{"ruleId":"180","severity":1,"message":"181","line":208,"column":56,"nodeType":"182","messageId":"183","endLine":208,"endColumn":58},{"ruleId":"180","severity":1,"message":"184","line":234,"column":49,"nodeType":"182","messageId":"183","endLine":234,"endColumn":51},{"ruleId":"180","severity":1,"message":"181","line":241,"column":46,"nodeType":"182","messageId":"183","endLine":241,"endColumn":48},{"ruleId":"180","severity":1,"message":"181","line":244,"column":44,"nodeType":"182","messageId":"183","endLine":244,"endColumn":46},{"ruleId":"180","severity":1,"message":"181","line":253,"column":54,"nodeType":"182","messageId":"183","endLine":253,"endColumn":56},{"ruleId":"180","severity":1,"message":"181","line":256,"column":52,"nodeType":"182","messageId":"183","endLine":256,"endColumn":54},{"ruleId":"180","severity":1,"message":"181","line":308,"column":43,"nodeType":"182","messageId":"183","endLine":308,"endColumn":45},{"ruleId":"180","severity":1,"message":"181","line":308,"column":82,"nodeType":"182","messageId":"183","endLine":308,"endColumn":84},{"ruleId":"185","severity":1,"message":"186","line":316,"column":22,"nodeType":"156","messageId":"187","endLine":316,"endColumn":23},{"ruleId":"154","severity":1,"message":"188","line":347,"column":15,"nodeType":"156","messageId":"157","endLine":347,"endColumn":19},{"ruleId":"154","severity":1,"message":"189","line":348,"column":15,"nodeType":"156","messageId":"157","endLine":348,"endColumn":19},{"ruleId":"154","severity":1,"message":"190","line":349,"column":15,"nodeType":"156","messageId":"157","endLine":349,"endColumn":17},{"ruleId":"154","severity":1,"message":"191","line":350,"column":15,"nodeType":"156","messageId":"157","endLine":350,"endColumn":19},{"ruleId":"154","severity":1,"message":"192","line":351,"column":13,"nodeType":"156","messageId":"157","endLine":351,"endColumn":31},{"ruleId":"180","severity":1,"message":"181","line":371,"column":53,"nodeType":"182","messageId":"183","endLine":371,"endColumn":55},{"ruleId":"180","severity":1,"message":"181","line":376,"column":28,"nodeType":"182","messageId":"183","endLine":376,"endColumn":30},{"ruleId":"154","severity":1,"message":"193","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":13},{"ruleId":"154","severity":1,"message":"194","line":8,"column":9,"nodeType":"156","messageId":"157","endLine":8,"endColumn":18},{"ruleId":"154","severity":1,"message":"195","line":8,"column":30,"nodeType":"156","messageId":"157","endLine":8,"endColumn":41},{"ruleId":"154","severity":1,"message":"194","line":2,"column":16,"nodeType":"156","messageId":"157","endLine":2,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":27,"column":51,"nodeType":"160","endLine":27,"endColumn":68},{"ruleId":"154","severity":1,"message":"193","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":13},{"ruleId":"154","severity":1,"message":"196","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":18},{"ruleId":"197","severity":1,"message":"198","line":3,"column":1,"nodeType":"199","endLine":7,"endColumn":2},"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'trash' is defined but never used.","'Document' is defined but never used.","'Page' is defined but never used.","'files' is assigned a value but never used.","'acceptedFileItems' is assigned a value but never used.","'fileRejectionItems' is assigned a value but never used.","'Router' is defined but never used.","'Routes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["200"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","Assignments to the 'calendarID' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-redeclare","'i' is already defined.","redeclared","'temp' is assigned a value but never used.","'year' is assigned a value but never used.","'ev' is assigned a value but never used.","'name' is assigned a value but never used.","'syllabyeCalendarId' is assigned a value but never used.","'Popup' is defined but never used.","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'PopupField' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"201","fix":"202"},"Update the dependencies array to be: [navigate]",{"range":"203","text":"204"},[4065,4067],"[navigate]"]