[
    "",
    "",
    "  Page 1 of 10 ",
    "CS 2336 Computer Science II (Java) ",
    "Spring 2023 Syllabus UTD ",
    " ",
    "INSTRUCTOR INFORMATION ",
    " ",
    "Name    Jason Smith  ",
    "Office    ECSS 3.232 ",
    " ",
    "Office Hours:  M/W 10:00 AM – 12:00 PM ",
    "Or by appointment ",
    " ",
    "All office hours will be held on MS Teams.  Please use the link provided ",
    "in eLearning and log into your Teams account.  Guests will not be ",
    "admitted ",
    " ",
    "Questions: Class time ",
    "Office hours ",
    "Piazza (http://piazza.com/utdallas/Spring2023/cs2336) ",
    "No questions by email  ",
    "  ",
    "COURSE INFORMATION ",
    " ",
    "Course Number  CE/CS 2336.001 ",
    "Credit Hours   3 ",
    "Meeting Time Tu/Th 10:00 – 11:15 PM ",
    "Room JO 4.102 ",
    " ",
    " ",
    "DO YOU NEED ASSISTANCE? ",
    " ",
    "Problem Solving Procedure ",
    "1. Try to solve it yourself – use the internet to research the problem and try different solutions.  ",
    "If you can’t solve it after a couple of hours move to the next level. ",
    " ",
    "2. Consult with your classmates – Post your question in Piazza or the class Discord server.  On ",
    "Piazza, you will be able to post your questions (anonymously if you wish) about anything ",
    "related to the class and get a response either from me or a classmate.  Private posts (that ",
    "only I can see) should be reserved for grade related questions or questions involving large ",
    "snippets of code.  Since there are multiple people that can answer questions, you should get ",
    "a quick response allowing you to complete the tasks you are working on.  If your question ",
    "can’t be answered there, move to the next level. ",
    " ",
    "3. Visit the CSMC – If your classmates can’t answer the question, check with a mentor at the ",
    "CSMC (https://csmc.utdallas.edu).  If the CSMC mentors can’t answer your question, move ",
    "to the next level. ",
    " ",
    "4. Visit me during office hours – If you are truly stumped, I will give you the information you ",
    "need to move forward. ",
    " ",
    " ",
    "Help Desk: For help with issues regarding your computer, UTD maintains a walk-in help desk. Visit ",
    "their Web site for details: http://www.utdallas.edu/ir/helpdesk/ ",
    " ",
    "",
    "  Page 2 of 10 ",
    "If you need help, please make the effort to reach out.  We can’t help you if we don’t know ",
    "that you need help. ",
    " ",
    "Resources: ",
    "• Intro to Java: http://javabeginnerstutorial.com/core-java/ ",
    "• Java questions: http://stackoverflow.com/questions/tagged/java ",
    "• Online Java tutorial: http://introcs.cs.princeton.edu/java/10elements/ ",
    " ",
    "WHAT DO I NEED FOR CLASS? ",
    " ",
    "• Zybooks (Required): ",
    "o CS 2336 – Computer Science II ",
    "o You will pay for Zybooks when you enter the first assignment (Java Basics Preview 1 ",
    "(Variables, Streams, Branches, Loops) ",
    "o All projects and homework assignments will be submitted through Zybooks for grading ",
    "and plagiarism checking ",
    "o You should receive a discount if you used Zybooks in 1336 or 1337 ",
    " ",
    "• IDE and Java JDK (Required) ",
    "o All projects you submit will be executed with Java SE 11.  This is a free download for all ",
    "OS’s.  https://www.oracle.com/java/technologies/javase/jdk11-archive-downloads.html ",
    "▪ Newer versions of Java may be used, but be careful that you do not use anything from ",
    "later versions of Java in your programs. ",
    "o You may use any IDE you prefer. ",
    "o I encourage everyone to use Online GDB (https://www.onlinegdb.com/online_c++_compiler) ",
    "▪ This will simulate the ZyBooks environment for testing. ",
    "▪ It provides a clean debugger interface that will make it easier to fix bugs in your code. ",
    "• Please review the resources in eLearning for help with using the debugger ",
    "• Use of a debugger is one of the most important skills you should learn in this ",
    "class ",
    "o It’s free and little set-up required. ",
    " ",
    "• Note Taking Supplies – I expect you to actively take notes.  Anything discussed in class or ",
    "available in the textbook is fair game on a test.  Have something available to collect all the ",
    "knowledge given to you (be that in physical or digital form). ",
    " ",
    "• A computer (optional) – Obviously, you need a computer for this class.  Any computer bought ",
    "off the shelf is sufficient for this class.  However, if you do not have a computer, the CS ",
    "computer lab is open 24/7 and contains all the software you will need for this class. ",
    " ",
    "I do not permit computers in class (except on in-class assignment days).  Tablets that use a ",
    "digital pen (no keyboards or mice) are allowed for students to take notes. Exceptions will be ",
    "made for those students that have accommodations from the Office of Accessibility. ",
    " ",
    "This is not a popular rule among students, but it is done so to maintain fairness in the academic ",
    "environment for all students. There is no need to copy my examples in class as I will make them ",
    "available to you. I would rather you focus on how we are utilizing the Java tools to solve ",
    "problems. ",
    " ",
    " ",
    " ",
    "",
    "  Page 3 of 10 ",
    "REQUIRED COURSE INFORMATION SECTION ",
    " ",
    "Course Prerequisite:  CE/CS 1337 (or equivalent) with a grade of C or better. (If you ",
    "scored a 4 or 5 on the AP test, you should take 2337 ",
    "instead of 2336) ",
    " ",
    "Course Pre-/Co-requisite:  currently taking CE/CS 2305 or have earned a C or better in ",
    "CE/CS 2305 (or equivalent). ",
    " ",
    "Description  of  Course  Content: Further  applications  of  programming  techniques,  introducing  the ",
    "fundamental concepts of data structures and algorithms. Topics include recursion, fundamental data ",
    "structures  (including  stacks,  queues,  linked  lists,  hash  tables,  trees,  and  graphs),  and  algorithmic ",
    "analysis. Includes comprehensive programming projects. Programming language of choice is Java. ",
    " ",
    "Student Learning Outcomes: Students will be able to implement different data structures using ",
    "the Java programming language. They will be able use different data structures to program solutions ",
    "to solve real problems. It will also help them understand algorithmic analysis and complexities. After ",
    "successful completion of this course, you should be able to: ",
    "• Ability to implement recursive algorithms ",
    "• Ability to implement linked lists, stacks, and queues ",
    "• Ability to implement a binary tree ",
    "• Ability to use hash tables and graphs ",
    "• Ability to understand algorithmic analysis ",
    "• Ability to create a comprehensive programming project ",
    "• Ability to implement and use generics/templates ",
    " ",
    "Departmental Attendance Policy: The Computer Science Department has implemented the ",
    "following attendance policy: ",
    " ",
    "If a student misses three consecutive classes, the student will receive a letter grade ",
    "reduction to his or her final grade.  This deduction is cumulative, so if a student misses three ",
    "consecutive classes twice, the final grade will be reduced by two letter grades.  If a student misses ",
    "four consecutive classes, the student will automatically receive an F for his or her final ",
    "grade.   ",
    " ",
    " ",
    "TEACHING PHILOSOPHY ",
    " ",
    "CS 2336 is a skills-based class.  Like any skill, learning requires practice and perseverance.  You ",
    "don't learn to play guitar by strumming a few chords you saw in a YouTube video.  It takes time, ",
    "energy, and dedication to the craft.  It also requires a change in mindset compared to high school.  ",
    "Many see CS as fun and exciting because of a high school class that just taught the basics and made ",
    "simple games.  But CS is more about solving problems and implementing those solutions in a foreign ",
    "language.  The projects you will create in this class are inspired by actual problems from the ",
    "professional world.  You may feel that CS is no longer “fun” once exposed to these problems. ",
    " ",
    "The goal of the class is not to learn Java, but to learn the concepts associated with object-oriented ",
    "programming and data structures and use those concepts to solve problems.  Anyone can learn a ",
    "programming language on their own, but the language is simply a collection of tools.  What you do ",
    "with the tools is where the learning takes place.  Just because you know how to use a hammer ",
    "doesn't mean you can build a house.   ",
    " ",
    "I teach the class using a reverse classroom approach.  This means that most of the learning will ",
    "happen outside of the classroom.  The classroom is where we will come together to help fill in the ",
    "gaps and answer questions based on your experience outside of class.  You will learn the concepts ",
    "",
    "  Page 4 of 10 ",
    "by completing activities and writing code. It is expected that you will discuss and share information ",
    "(not solutions) with your peers which will solidify your understanding of the material.   ",
    " ",
    "My goal is to prepare you for what lies ahead so you will not only be ready for your remaining ",
    "classes, but also ready to transition into the professional world.  It’s never too early to think about ",
    "the things you need for the next phase of your life after graduation.  In addition to learning ",
    "foundational computer science concepts, students will improve their critical thinking, communication, ",
    "debugging, and time management skills.  All of these are necessary to be successful not only ",
    "academically, but also professionally as well as in everyday life. ",
    " ",
    " ",
    "WHAT I EXPECT OF EACH STUDENT ",
    " ",
    "• Ask for help at any time.  If you do not understand something or are having trouble ",
    "implementing a concept, follow the problem solving procedure defined on page 1.  The sooner ",
    "you ask that question, the sooner you will get an answer.  That answer will allow you to move ",
    "forward. I want you to succeed; don’t be afraid to ask questions. ",
    " ",
    "• Take responsibility for your education.  I am not the type of teacher that lectures with ",
    "slides and expects students to memorize them.  I teach by creating program examples in ",
    "class and asking you to participate in completing the code as well as ask questions about ",
    "things you don’t understand. I will give challenging assignments to push you toward learning ",
    "general concepts developing critical thinking and core programming skills.   ",
    " ",
    "Part of being a professional is learning how to teach yourself.  I am going to guide you ",
    "through the topics of the semester, but a significant portion of what you take with you to the ",
    "next class will be things that you have learned on your own.   ",
    " ",
    "• Practice time management skills.  Good time management is necessary for this class.  All ",
    "assignments (homework and projects) are designed to be worked on over a period of days or ",
    "weeks.  I expect everyone to devote at least an hour a day to this class.  Doing this ",
    "will help you to divide tasks up into chunks and work a little at a time on an assignment ",
    "rather than waiting until a day or two before it is due.  You will have a very difficult time ",
    "succeeding in this class if you schedule to finish every assignment at the last minute. ",
    " ",
    "• Attend every class. You are paying for an education.  Don’t waste your money by skipping ",
    "class.  I will give you everything you need to complete projects and do well on the tests.  You ",
    "have to be there to get the information. ",
    " ",
    "• Make mistakes! This is how you learn. Don’t be discouraged when something goes wrong.  ",
    "Programming takes lots of practice and mistakes will always happen.  Study the mistakes you ",
    "made so that you can learn from them for the future. ",
    " ",
    " ",
    "WHAT EACH STUDENT SHOULD EXPECT ",
    " ",
    "• A problem solving class.  This class is not a programming class.  Computer science is all ",
    "about problem solving.  The content of this class is to teach you how to solve problems using ",
    "a computer.  In order to solve those problems, you will need to learn a foreign language ",
    "(Java) and write solutions that the computer can interpret. ",
    " ",
    "• An open environment dedicated to learning. I want students to feel free to voice their ",
    "opinions.  Oftentimes as we code in class, I will ask students what they would do in a certain ",
    "situation.  I want each student to feel as if he/she can speak freely and also be open for other ",
    "students to discuss that idea, even if that means that some students will disagree. ",
    " ",
    "",
    "  Page 5 of 10 ",
    "• Exams focused on application.  Many of the questions I ask on an exam require you to ",
    "apply your knowledge to answer the question.  This may involve finding errors in code or ",
    "determining output of a code segment.  I expect you to apply the knowledge you have ",
    "learned to the situations on the test.  Questions on the test are designed to make sure that ",
    "you understand what you are doing rather than repeating an example from your notes or the ",
    "textbook. ",
    " ",
    "• A simulated professional experience.  The projects in this class require you to exercise ",
    "strategies found in “the real world”.  Your logic for a project may force you to learn new ",
    "techniques that haven’t yet been discussed in class.  You will have to perform code ",
    "maintenance and improve the efficiency of previously written code.  These things offer a ",
    "small taste of how life might be once you graduate and are given large sums of money by a ",
    "company seeking your skills. ",
    " ",
    "• A deep understanding of Java and object-oriented programming.  My goal is for you to ",
    "know all the topics of CS 2336 as well (if not better) than me, and I’m going to push you ",
    "toward that goal.  You should have peace of mind moving on in your program because you ",
    "will be fully prepared to tackle what the next course in the sequence will throw at you.   ",
    " ",
    " ",
    "THE INFORMATION YOU REALLY CARE ABOUT ",
    " ",
    "Grading Scale:  ",
    "98-100 A+ 88-89 B+ 78-79 C+ 68-69 D+ Below 60 F ",
    "92-97 A 82-87 B 72-77 C 62-67 D  ",
    "90-91 A- 80-81 B- 70-71 C- 60-61 D  ",
    "  ",
    " ",
    "Grade Components:  Project Zero   5% ",
    "Projects (4)   40%  ",
    "    Exams (2)   25%  ",
    "Preview Homework  10% ",
    "Review Homework  10% ",
    "In-class Assignments  10% ",
    " ",
    "General Grade Information: All grades will be available in eLearning.  The Weighted Total column ",
    "will give you the most accurate information concerning your grade.  The weighted total is an ",
    "approximation of your grade in the class based on the grades currently in eLearning. ",
    " ",
    "I do not curve grades. Assignments are combined into categories so that a low grade for one ",
    "item will not destroy your grade.  There are things built into the course to help students obtain ",
    "higher grades.  ",
    " ",
    "Grade Disputes: All grade disputes must be reported within 1 week and resolved within 2 ",
    "weeks of the grade in question being posted in eLearning. Uncontested grades will ",
    "become final after 1 week and cannot be disputed later.  Announcements are made after each ",
    "grade is posted so please check your grades promptly and reach out to the proper person. ",
    " ",
    "I am responsible for grading your exams.  If you have questions regarding your exam, please ",
    "contact me through a private post on Piazza.  ",
    " ",
    "Everything else will be graded by a TA. Please address any grading concerns you have ",
    "regarding these grades with the TA. When you email the TA with questions about your ",
    "grade, copy me on the email so that I am aware of the situation and can make sure it ",
    "is resolved. ",
    "",
    "  Page 6 of 10 ",
    " ",
    "You are responsible for verifying that all grades in Zybooks are recorded in eLearning ",
    "correctly.  Once you submit your assignment in ZyBooks, remember to press the Submit to ",
    "Blackboard button.  Then, check My Grades in eLearning to check that the correct grade was ",
    "transferred.   ",
    " ",
    "Projects: Projects will be major programming assignments that supplement recently discussed ",
    "topics and will be completed in two to three weeks.  Projects are intended to take ",
    "approximately 15-20** hours to complete overall; this includes the design, coding and testing ",
    "process.  Waiting until a couple of days before the due date to start the project is a bad idea.  ",
    "Not only does this introduce unnecessary stress into your life, it hardly ever ends well for the ",
    "student.  Most students score poorly on projects that are built in less than three days. ",
    "  ",
    "(** this is average time for a student that has taken 1337 at UTD.  Your experience with ",
    "problem solving in computer science may impact the time needed to complete assignments) ",
    " ",
    "Projects will be divided into milestones as you would expect to see in the professional world.  ",
    "The milestones for each project are as follows: ",
    "• Design (4 days) ",
    "• Core implementation (7-10 days) ",
    "• Final implementation and testing (7-10 days) ",
    " ",
    "Each milestone will be graded and the total of all three milestones will contribute toward the ",
    "overall grade for the project. Each milestone will have a firm deadline and failure to meet the ",
    "deadlines will have a negative impact on your grade. ",
    " ",
    "Projects are individual endeavors and students are not to work in groups on any ",
    "project.  Students are permitted (and I openly encourage students) to discuss the project.  ",
    "Feel free to share ideas on the logic, but DO NOT SHOW YOUR CODE TO OTHER ",
    "STUDENTS.  When discussing logic, try to keep it general.  If you give out every little piece of ",
    "logic you have, there is a good chance the person you are helping will have very similar code ",
    "as yours and may be flagged for being too similar. Be careful of posting your code online.  ",
    "Another student could use your code without your knowledge and could involve you in a code ",
    "plagiarism referral. ",
    " ",
    " Students should avoid using web sites like GitHub and Chegg for help on projects.  Copying ",
    "code from a web site is considered plagiarism and will be treated as such.  If you find code on a ",
    "web site, it is highly likely another student will find it as well which may cause both ",
    "submissions to be flagged for similarity. Submitting project and assignment details to web sites ",
    "for outside help (e.g. Chegg) is also considered academic dishonesty by UTD.   ",
    " ",
    "All projects will be submitted in ZyBooks and will be compared for originality.  Any projects that ",
    "are approximate or identical copies will be reported to the Office of Community Standards and ",
    "Conduct, and I will accept their decision in regard to the grade if they believe that academic ",
    "dishonesty has occurred. ",
    " ",
    "Programming assignments will be graded on a 100 point basis.  Not only will your project be ",
    "graded on proper execution, but also things like efficiency, implementation and documentation. ",
    "Keep in mind that you always want to write code that is easy to understand and is also easy to ",
    "maintain.  Fewer lines do not necessarily mean a better program.  Please use comments ",
    "liberally. ",
    " ",
    "You are responsible for testing your project thoroughly before submission.  I will not give you ",
    "the exact test cases that will be used for grading before the project is due.  As a computer ",
    "scientist, you must be able to identify all possible input and make sure that your code produces ",
    "proper output and does not crash. ",
    "",
    "  Page 7 of 10 ",
    " ",
    "Late Projects: ",
    "All project milestones will be due at 11:59 PM on the day listed in the project documentation.  ",
    "The final project code will be accepted up to 12 hours late with the following penalties ",
    " ",
    "<= 1 hour -5 points ",
    "1 – 3 hours -10 points ",
    "3 – 12 hours -25 points ",
    "12 – 24 hours -50 points ",
    " ",
    "Preview Homework: Preview homework assignments are activities based on the readings in ",
    "ZyBooks.  Students will read through the sections and answer basic questions about the ",
    "material to illustrate they understand the general concepts. ",
    " ",
    "Review Homework: Review homework assignments are generally short coding assignments that ",
    "can be done in 1-2 hours and measure how well you understand the material we have covered.  ",
    "These assignments are typically due 1 week from the date given. ",
    " ",
    "Exams: Exams will cover chapters as listed below in the tentative course schedule.  Exams will ",
    "include a variety of question types including multiple choice, multiple answer and essay ",
    "questions.  Students are expected to be able to apply knowledge from all previous chapters in ",
    "conjunction with the tested chapters.  Exams are not created to make you feel smart; they are ",
    "designed for you to demonstrate your understanding of the concepts.  A high score on an exam ",
    "exhibits a deep understanding of the topics. ",
    " ",
    "An exam should not be missed except for the most extreme. If you miss an exam, you must ",
    "have documentation for the absence.  A make-up exam may be given to students with valid ",
    "documentation.  The allowance of a make-up exam is at the sole discretion of the instructor.  ",
    " ",
    "All exams will be given online in eLearning.  Students are expected to take the exam at the ",
    "Testing Center on the day scheduled during the window of opportunity provided by the testing ",
    "Center.  The exams will be closed book and closed notes.  All solutions to coding problems on ",
    "the test will be submitted for similarity to maintain academic integrity. ",
    " ",
    "You are expected to be at the Testing Center at your scheduled time.  You must start the exam ",
    "no later than 10 minutes after your scheduled time.  Failure to do so will result in a 10 point ",
    "penalty on the exam. ",
    " ",
    "Assignment Due Date Exceptions: In general, assignments are not accepted late except for the ",
    "final submission of a project (see late penalties above).  However, I know that life has a way of ",
    "bringing the unexpected at the most inopportune times. If you have an exceptional life ",
    "situation (personally or academically) that is creating difficulty for you to meet the given due ",
    "date of an assignment, I will work with you to give an extension as long as you contact me at ",
    "least 24 hours before the due date. ",
    " ",
    " ",
    "ARE WE THERE YET? ",
    " ",
    "All dates are subject to change at the discretion of the instructor ",
    "Date Topic Chapter ",
    "1/17 ",
    "1/19 ",
    " ",
    "Basic Elements of Java ",
    "I/O and Control Structures ",
    "User-Defined Functions ",
    " ",
    "Chapters 3 - 8 ",
    "",
    "  Page 8 of 10 ",
    "1/24 ",
    "Last day to add/swap classes ",
    "Arrays ",
    "Strings ",
    "Chapters 9-10 ",
    "1/26 ",
    "Recursion ",
    "Chapter 11 ",
    "1/31 ",
    "Object-Oriented Design ",
    "Classes ",
    "Chapter 12 ",
    "2/2 ",
    "Last day to withdraw without “W” ",
    "In-Class Assignment #1 ",
    "2/7 Linked Lists ",
    "Chapter 16 ",
    "2/9 Linked Lists ",
    "2/14 Exception Handling Chapter 19 ",
    "2/16 ",
    "Generics ",
    "Arraylists ",
    "Chapter 20 ",
    "Chapter 21 ",
    "2/21 ",
    "Inheritance and Polymorphism ",
    "Chapter 14 ",
    "2/23 Inheritance and Polymorphism ",
    "2/28 In-Class Assignment #2 ",
    "3/2 ",
    "Abstract Classes ",
    "Interfaces  ",
    "Chapter 15 ",
    "3/3 Mid-Term Exam (Java + Linked List) ",
    "3/7 Stacks, Queues Chapter 17 ",
    "3/9 In-Class Assignment #3 ",
    "3/14 – 3/18 SPRING BREAK ",
    "3/21 Binary Search Trees ",
    "Chapter 22 3/23 Binary Search Trees ",
    "3/28 ",
    "Binary Search Trees ",
    "3/30 ",
    "Last day to drop ",
    "In-Class Assignment #4 ",
    "4/4 Graphs ",
    "Chapter 24 ",
    "4/6 Graphs ",
    "4/11 Graphs/Hashing ",
    "Chapter 24 ",
    "Chapter 26 ",
    "4/13 In-Class Assignment #5 ",
    "4/18 Hashing ",
    "Chapter 26 ",
    "4/20 Hashing ",
    "4/25 In-Class Assignment #6 ",
    "4/27 ",
    "Measuring Algorithm Efficiency ",
    "Big-O Notation ",
    "Chapter 27 ",
    "5/2 ",
    "Algorithm Efficiency of Data Structures ",
    "Chapter 28 ",
    "",
    "  Page 9 of 10 ",
    "5/4 ",
    "Sorting Algorithms ",
    "5/11 ",
    "Final Exam (Data Structures) ",
    " ",
    " ",
    " ",
    "Assignment Calendar ",
    "All assignments due by 11:59 on the due date listed unless otherwise noted ",
    "All dates are subject to change at the discretion of the instructor. ",
    "Please refer to eLearning for any updates. ",
    "All submissions are made using the provided links in eLearning ",
    "Assignment Post Date Due Date ",
    "Java Basics Preview 1 (Variables, Streams, Branches, Loops) 1/17 1/22 ",
    "Project Zero C++ Implementation 1/19 1/24 ",
    "Java Basics Preview 2 (Functions, Recursion, Arrays, Strings) 1/17 1/27 ",
    "Project Zero Java Implementation 1/19 1/31 ",
    "Classes Preview 1/17 2/1 ",
    "Project 1 Pseudocode 1/31 2/5 ",
    "Linked Lists Preview 1/17 2/6 ",
    "Exception Handling, Generics, and ArrayLists Preview 1/17 2/13 ",
    "Project 1 Core Implementation 1/31 2/14 ",
    "Project 1 Final Submission 1/31 2/20 ",
    "Inheritance, Polymorphism, and Interfaces Preview 1/17 2/22 ",
    "Review Homework 1 2/16 2/23 ",
    "Project 2 Pseudocode 2/21 2/25 ",
    "Mid-term Exam 3/3 3/3 ",
    "Project 2 Core Implementation 2/21 3/5 ",
    "Stacks and Queues Preview 1/17 3/7 ",
    "Project 2 Final Submission 2/21 3/11 ",
    "Binary Search Trees Preview 1 1/17 3/20 ",
    "Project 3 Pseudocode 3/21 3/25 ",
    "Binary Search Trees Preview 2 1/17 3/27 ",
    "Project 3 Core Implementation 3/21 3/31 ",
    "Graphs Preview 1/17 4/3 ",
    "Project 3 Final Submission 3/21 4/7 ",
    "Review Homework 2 4/4 4/10 ",
    "Project 4 Pseudocode 4/6 4/12 ",
    "Hashing Preview 1/17 4/17 ",
    "Review Homework 3 4/18 4/24 ",
    "",
    "  Page 10 of 10 ",
    "Algorithm Efficiency Preview 1/17 4/26 ",
    "Project 4 Final Submission 4/6 4/29 ",
    "Review Homework 4 4/27 5/4 ",
    "Final Exam 5/11 5/11 ",
    " ",
    "University Policies ",
    "For all other University policies, please visit http://go.utdallas.edu/syllabus-policies  "
]