{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasValue = hasValue;\nexports.isAdornedStart = isAdornedStart;\nexports.isFilled = isFilled;\n// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nfunction hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n}\n\n// Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\nfunction isFilled(obj) {\n  let SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n}\n\n// Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\nfunction isAdornedStart(obj) {\n  return obj.startAdornment;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","hasValue","isAdornedStart","isFilled","Array","isArray","length","obj","SSR","arguments","undefined","defaultValue","startAdornment"],"sources":["/Users/k.rahul287/node_modules/@mui/material/node/InputBase/utils.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasValue = hasValue;\nexports.isAdornedStart = isAdornedStart;\nexports.isFilled = isFilled;\n// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nfunction hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n}\n\n// Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\nfunction isFilled(obj, SSR = false) {\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n}\n\n// Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\nfunction isAdornedStart(obj) {\n  return obj.startAdornment;\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,QAAQ,GAAGA,QAAQ;AAC3BF,OAAO,CAACG,cAAc,GAAGA,cAAc;AACvCH,OAAO,CAACI,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,QAAQA,CAACD,KAAK,EAAE;EACvB,OAAOA,KAAK,IAAI,IAAI,IAAI,EAAEI,KAAK,CAACC,OAAO,CAACL,KAAK,CAAC,IAAIA,KAAK,CAACM,MAAM,KAAK,CAAC,CAAC;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASH,QAAQA,CAACI,GAAG,EAAe;EAAA,IAAbC,GAAG,GAAAC,SAAA,CAAAH,MAAA,QAAAG,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,KAAK;EAChC,OAAOF,GAAG,KAAKN,QAAQ,CAACM,GAAG,CAACP,KAAK,CAAC,IAAIO,GAAG,CAACP,KAAK,KAAK,EAAE,IAAIQ,GAAG,IAAIP,QAAQ,CAACM,GAAG,CAACI,YAAY,CAAC,IAAIJ,GAAG,CAACI,YAAY,KAAK,EAAE,CAAC;AACzH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAST,cAAcA,CAACK,GAAG,EAAE;EAC3B,OAAOA,GAAG,CAACK,cAAc;AAC3B"},"metadata":{},"sourceType":"script","externalDependencies":[]}